{"version":3,"sources":["webpack:///./src/app/@theme/model/process-class.ts","webpack:///./src/app/pages/process/add-edit-function/add-edit-function.component.html","webpack:///./src/app/pages/process/add-edit-function/add-edit-function.component.scss","webpack:///./src/app/pages/process/add-edit-function/add-edit-function.component.ts","webpack:///./src/app/pages/process/add-edit-process/add-edit-process.component.html","webpack:///./src/app/pages/process/add-edit-process/add-edit-process.component.scss","webpack:///./src/app/pages/process/add-edit-process/add-edit-process.component.ts","webpack:///./src/app/pages/process/add-step/add-step.component.html","webpack:///./src/app/pages/process/add-step/add-step.component.scss","webpack:///./src/app/pages/process/add-step/add-step.component.ts","webpack:///./src/app/pages/process/dynamic-process/dynamic-process.component.html","webpack:///./src/app/pages/process/dynamic-process/dynamic-process.component.scss","webpack:///./src/app/pages/process/dynamic-process/dynamic-process.component.ts","webpack:///./src/app/pages/process/process-routing.module.ts","webpack:///./src/app/pages/process/process.component.html","webpack:///./src/app/pages/process/process.component.scss","webpack:///./src/app/pages/process/process.component.ts","webpack:///./src/app/pages/process/process.module.ts","webpack:///./src/app/pages/process/view-process/view-process.component.html","webpack:///./src/app/pages/process/view-process/view-process.component.scss","webpack:///./src/app/pages/process/view-process/view-process.component.ts"],"names":[],"mappings":"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","file":"process-process-module.js","sourcesContent":["export class Process {\n    process_name: any;\n    entry_id: any;\n    no_dying_bath: any;\n    dc_multiplying_fac: any;\n    created_by: any;\n    updated_by: any;\n    created_date: any;\n    updated_date: any;\n    user_head_id: any;\n    process_record: ProcessRecord[];\n}\nexport class ProcessRecord {\n    control_id: any;\n    type: any;\n    temperature: any;\n    plc_program_no: any;\n    hold_time: any;\n    rate_temperature: any;\n    process_sub_record: ProcessSubRecord[];\n}\n\nexport class ProcessSubRecord {\n    entry_id: any;\n    index: any;\n    item_id: any;\n    item_name: any;\n    concentration: any;\n    item_by: any;\n    supplier_name: any;\n    lr_or_fabric_wt: any;\n}\n\nexport class ProcessReq {\n    process_name: any;\n    entry_id: any;\n    no_dying_bath: any;\n    dc_multiplying_fac: any;\n    created_by: any;\n    user_head_id: any;\n    updated_by: any;\n    created_date: any;\n    updated_date: any;\n    process_req_record: ProcessReqRecord[];\n}\nexport class ProcessReqRecord {\n    control_id: any;\n    type: any;\n    temperature: any;\n    plc_program_no: any;\n    hold_time: any;\n    rate_temperature: any;\n    entry_id: any;\n    index: any;\n    item_id: any;\n    item_name: any;\n    concentration: any;\n    item_by: any;\n    supplier_name: any;\n}","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Function</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<form #functionForm=\\\"ngForm\\\">\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 form-group\\\">\\n        <label>Function Name</label>\\n        <select class=\\\"form-control \\\" name=\\\"function\\\" [(ngModel)]=\\\"funcObj.func_value\\\" #func=\\\"ngModel\\\">\\n          <option disabled value=\\\"\\\">Select Function</option>\\n          <option *ngFor=\\\"let function of functionDropdown\\\" [value]=\\\"function.id\\\">{{function.name}}</option>\\n        </select>\\n        <div *ngIf=\\\"func.invalid && (func.dirty || func.touched)\\\" class=\\\"errors\\\">\\n          <div *ngIf=\\\"func.errors && func.errors.required\\\">\\n            Function Name is required.\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Function Position</label>\\n          <select [disabled]=\\\"editFunction\\\" class=\\\"form-control \\\" [(ngModel)]=\\\"funcObj.func_position\\\" name=\\\"stepNo\\\"\\n            #position=\\\"ngModel\\\" required>\\n            <option *ngFor=\\\"let p of positionValues\\\" [value]=\\\"p\\\">{{p}}</option>\\n          </select>\\n          <div *ngIf=\\\"position.invalid && (position.dirty || position.touched)\\\" class=\\\"errors\\\">\\n            <div *ngIf=\\\"position.errors && position.errors.required\\\">\\n              Function Position is required.\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n      </div>\\n      <div class=\\\"col-md-5\\\" *ngIf=\\\"functionList.length\\\">\\n        <h5>Current Functions:</h5>\\n        <div *ngFor=\\\"let i of functionList;let z=index\\\">\\n          <span>{{z+1}}.</span>&nbsp;<span>{{i.func_name}}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"funcObj.func_value==='pump'\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Pump Speed(%)</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"pumpObj.pump_speed\\\" name=\\\"pumpspeed\\\" #Speed=\\\"ngModel\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"funcObj.func_value==='water'\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Control Type</label>\\n            <nb-radio-group (change)=\\\"onWaterTypeChange()\\\" fieldSize=\\\"small\\\" class=\\\"form-control inline-block\\\"\\n              name=\\\"watertype\\\" [(ngModel)]=\\\"waterObj.type\\\">\\n              <nb-radio value=\\\"water\\\">Water</nb-radio>\\n              <nb-radio value=\\\"drain\\\">Drain</nb-radio>\\n            </nb-radio-group>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <span *ngIf=\\\"waterObj.type === 'water'\\\">IN</span> -->\\n      <div *ngIf=\\\"waterObj.type === 'water'\\\" class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Water Type</label>\\n            <nb-radio-group fieldSize=\\\"small\\\" class=\\\"form-control inline-block\\\" name=\\\"water\\\"\\n              [(ngModel)]=\\\"waterObj.water_type\\\">\\n              <nb-radio *ngFor=\\\"let w of waterList\\\" [value]=\\\"w.id\\\">{{w.name}}</nb-radio>\\n            </nb-radio-group>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"waterObj.type === 'water'\\\" class=\\\"row\\\">\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Fill By Fabric Ratio</label>\\n            <input nbInput fullWidth type=\\\"number\\\" fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              (keypress)=\\\"numberOnly($event)\\\" max='10' [(ngModel)]=\\\"waterObj.fabric_ratio\\\" name=\\\"fabricRatio\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <nb-checkbox style=\\\"margin-top:13px\\\" name=\\\"jet\\\" [(ngModel)]=\\\"waterObj.jet_level\\\">Jet Level</nb-checkbox>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <!-- <span *ngIf=\\\"waterObj.type !== 'water'\\\">DRAIN</span> -->\\n      <div *ngIf=\\\"waterObj.type !== 'water'\\\" class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Drain Type</label>\\n            <nb-radio-group fieldSize=\\\"small\\\" name=\\\"water_drain\\\" class=\\\"form-control inline-block\\\"\\n              [(ngModel)]=\\\"waterObj.drain_type\\\">\\n              <nb-radio *ngFor=\\\"let d of drainTypeList\\\" [value]=\\\"d.id\\\">{{d.name}}</nb-radio>\\n            </nb-radio-group>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"funcObj.func_value==='temp'\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>S V (Set Value)(C)</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              (keypress)=\\\"numberOnly($event)\\\" (change)=\\\"onSetValueChange()\\\" [(ngModel)]=\\\"tempObj.set_value\\\"\\n              name=\\\"setValue\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Rate of Rise (C/minute)</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"tempObj.rate_of_rise\\\" name=\\\"rateRise\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Hold Time</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"tempObj.hold_time\\\" name=\\\"holdTime\\\" />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <nb-checkbox name=\\\"pressure\\\" [(ngModel)]=\\\"tempObj.pressure\\\">Pressure (Above 80 C)</nb-checkbox>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"funcObj.func_value==='dosing'\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Fill Side Tank </label>\\n            <select class=\\\"form-control\\\" name=\\\"fill\\\" [(ngModel)]=\\\"dosingObj.fill_type\\\">\\n              <option *ngFor=\\\"let fill of fillList\\\" [value]=\\\"fill.id\\\">{{fill.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Fill Side Tank Level</label>\\n            <select class=\\\"form-control \\\" name=\\\"filllevel\\\" [(ngModel)]=\\\"dosingObj.dosing_percentage\\\">\\n              <option *ngFor=\\\"let level of fillLevelList\\\" [value]=\\\"level.id\\\">{{level.name}}</option>\\n            </select>\\n            <!-- <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              [(ngModel)]=\\\"dosingObj.dosing_percentage\\\" name=\\\"dosingpercentage\\\" /> -->\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      (Will dose after Operator Confirmation)\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <nb-checkbox name=\\\"dose\\\" [(ngModel)]=\\\"dosingObj.have_dose\\\"> dose at Temp\\n              (C) <input fieldSize=\\\"small\\\" class=\\\"col-md-3\\\" nbInput name=\\\"tempDosing\\\"\\n                [(ngModel)]=\\\"dosingObj.dose_at_temp\\\"></nb-checkbox>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\" *ngIf=\\\"dosingObj.dose_type !== 'color'\\\">\\n          <div class=\\\"form-group\\\">\\n            <nb-checkbox name=\\\"doseHeat\\\" [(ngModel)]=\\\"dosingObj.dose_while_heating\\\"> Dose while Heating\\n            </nb-checkbox>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Dose Type</label>\\n            <nb-radio-group fieldSize=\\\"small\\\" class=\\\"form-control inline-block\\\" name=\\\"dosetype\\\"\\n              [(ngModel)]=\\\"dosingObj.dose_type\\\" (change)=\\\"onDoseTypeChange()\\\">\\n              <nb-radio value=\\\"chemical\\\">Chemical</nb-radio>\\n              <nb-radio value=\\\"color\\\">Color</nb-radio>\\n            </nb-radio-group>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"dosingObj.dose_type != undefined && dosingObj.dose_type === 'chemical'\\\">\\n        <div class=\\\"row col-md-12 table table-responsive\\\">\\n          <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowChemicalData\\\"\\n            [columnDefs]=\\\"chemicalcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\n            *ngIf=\\\"chemicalSubRecordArray.length\\\">\\n          </ag-grid-angular>\\n        </div>\\n        <form #chemicalform=\\\"ngForm\\\" class=\\\"col-md-12\\\">\\n          <div class=\\\"row col-md-12\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Item Name</label>\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                  placeholder=\\\"Select Item Name\\\" name=\\\"chemicalitemName\\\" autocomplete=\\\"off\\\"\\n                  [(ngModel)]=\\\"chemicalSubRecord.item_name\\\" (click)=\\\"HideShowSForm()\\\" required\\n                  #chemicalItemName=\\\"ngModel\\\">\\n                <div *ngIf=\\\"flagDivSForm\\\" class=\\\"dropdown\\\">\\n                  <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowSForm()\\\" class=\\\"float-right\\\">[X]</a>\\n                  <table class=\\\"table table-bordered pointer table-responsive\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>Item Name</th>\\n                        <th>Supplier Name</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'chemical')\\\"\\n                        class=\\\"pointer\\\">\\n                        <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\n                        <td>{{item.item_name}}</td>\\n                        <td>{{item.supplier_name}}</td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n                <div *ngIf=\\\"chemicalItemName.invalid && (chemicalItemName.dirty || chemicalItemName.touched)\\\"\\n                  class=\\\"errors\\\">\\n                  <div *ngIf=\\\"chemicalItemName.errors && chemicalItemName.errors.required\\\">\\n                    Item Name is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Supplier Name</label>\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                  disabled [(ngModel)]=\\\"chemicalSubRecord.supplier_name\\\" name=\\\"chemicalSuppName\\\"\\n                  #ChemicalSuppName=\\\"ngModel\\\" required />\\n                <div *ngIf=\\\"ChemicalSuppName.invalid && (ChemicalSuppName.dirty || ChemicalSuppName.touched)\\\"\\n                  class=\\\"errors\\\">\\n                  <div *ngIf=\\\"ChemicalSuppName.errors && ChemicalSuppName.errors.required\\\">\\n                    Supplier Name is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row col-md-12\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Concentration</label>\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\n                  class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"chemicalSubRecord.concentration\\\"\\n                  name=\\\"chemicalConcentration\\\" #ChemicalConcentration=\\\"ngModel\\\" required />\\n                <div\\n                  *ngIf=\\\"ChemicalConcentration.invalid && (ChemicalConcentration.dirty || ChemicalConcentration.touched)\\\"\\n                  class=\\\"errors\\\">\\n                  <div *ngIf=\\\"ChemicalConcentration.errors && ChemicalConcentration.errors.required\\\">\\n                    Concentration is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>LR/F.WT</label>\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                  [(ngModel)]=\\\"chemicalSubRecord.lr_or_fabric_wt\\\" name=\\\"chemicalBy\\\" #ChemicalBy=\\\"ngModel\\\" required />\\n                <div *ngIf=\\\"ChemicalBy.invalid && (ChemicalBy.dirty || ChemicalBy.touched)\\\" class=\\\"errors\\\">\\n                  <div *ngIf=\\\"ChemicalBy.errors && ChemicalBy.errors.required\\\">\\n                    LR/F.WT is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n              <button size=\\\"small\\\" [disabled]=\\\"chemicalform.invalid\\\" style=\\\"margin-top: 21px;\\\" nbButton\\n                (click)=\\\"onAddChemicalRecord(chemicalform)\\\">Add</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"funcObj.func_value==='operator'\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-9\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Operator Message </label>\\n            <select class=\\\"form-control\\\" name=\\\"fill\\\" [(ngModel)]=\\\"operatorObj.operator_code\\\">\\n              <option *ngFor=\\\"let message of operatorMessageList\\\" [value]=\\\"message.id\\\">{{message.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Start at Temp</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              [(ngModel)]=\\\"operatorObj.start_at_temp\\\" name=\\\"startat\\\" />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"operatorObj.operator_code == '4'\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Custom Message</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              [(ngModel)]=\\\"operatorObj.operator_message\\\" name=\\\"operatorMsg\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button nbButton [disabled]=\\\"functionForm.invalid\\\" (click)=\\\"onSubmit()\\\">{{submitButton}}</button>\\n    <button nbButton (click)=\\\"activeModal.close(false)\\\">Cancel</button>\\n  </div>\\n</form>\"","module.exports = \".inline-block {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex; }\\n\\n.select.btn-mini {\\n  height: auto !important;\\n  line-height: 14px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9hZGQtZWRpdC1mdW5jdGlvbi9DOlxcVXNlcnNcXERFTExcXERvd25sb2Fkc1xcbmd4LXdpcmVmcmFtZS00Y2E0M2NkOGFiMjU0NzhhMDQ5MTc3MGMxMjBhN2E1NWZiYjgyYzVlL3NyY1xcYXBwXFxwYWdlc1xccHJvY2Vzc1xcYWRkLWVkaXQtZnVuY3Rpb25cXGFkZC1lZGl0LWZ1bmN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNEJBQW9CO0VBQXBCLDRCQUFvQjtFQUFwQixxQkFBb0IsRUFDdkI7O0FBRUQ7RUFDSSx3QkFBdUI7RUFDdkIsNkJBQTRCLEVBQy9CIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9hZGQtZWRpdC1mdW5jdGlvbi9hZGQtZWRpdC1mdW5jdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbmxpbmUtYmxvY2sge1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xufVxuXG4uc2VsZWN0LmJ0bi1taW5pIHtcbiAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbiAgICBsaW5lLWhlaWdodDogMTRweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FunctionObj, PumpMotorFunctionObj, WaterDrainFunctionObj, TempFunctionObj, DosingFunctionObj, OperatorMessageObj, ChemicalReq } from '../../../@theme/model/process-planning-class';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AgRendererComponent } from 'ag-grid-angular';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\nimport { ProcessSubRecord } from '../../../@theme/model/process-class';\nimport { NgForm } from '@angular/forms';\nimport { ColDef } from 'ag-grid-community';\n\n@Component({\n  selector: 'ngx-add-edit-function',\n  templateUrl: './add-edit-function.component.html',\n  styleUrls: ['./add-edit-function.component.scss']\n})\nexport class AddEditFunctionComponent implements OnInit {\n  @Input() position;\n  @Input() functionList = [];\n  @Input() editFunction: any;\n  submitButton = 'Add';\n  positionValues = [];\n  funcObj = new FunctionObj();\n  pumpObj = new PumpMotorFunctionObj();\n  waterObj = new WaterDrainFunctionObj();\n  tempObj = new TempFunctionObj();\n  dosingObj = new DosingFunctionObj();\n  operatorObj = new OperatorMessageObj();\n  waterList = [{ 'id': 'water1', 'name': 'water1' }, { 'id': 'water2', 'name': 'water2' }];\n  drainTypeList = [{ 'id': 'Complete Drain (at 0 bar)', 'name': 'Complete Drain (at 0 bar)' }, { 'id': 'Pressurize Drain (at 1 bar)', 'name': 'Pressurize Drain (at 1 bar)' }];\n  fillList = [{ 'id': 'Post Fill Fresh Water', 'name': 'Post Fill Fresh Water' }, { 'id': 'Pre Fill Fresh Water', 'name': 'Pre Fill Fresh Water' }, { 'id': 'Post Fill Machine Water', 'name': 'Post Fill Machine Water' }, { 'id': 'Pre Fill Machine Water', 'name': 'Pre Fill Machine Water' }]\n  functionDropdown = [{ 'id': 'dosing', 'name': 'Dosing' }, { 'id': 'temp', 'name': 'Temperature Control' }, { 'id': 'pump', 'name': 'Pump Control' }, { 'id': 'water', 'name': 'Water Control' }, { 'id': 'operator', 'name': 'Operator Message' }];\n  fillLevelList = [{ 'id': 'Level 1', 'name': 'Level 1' }, { 'id': 'Level 2', 'name': 'Level 2' }];\n  operatorMessageList = [{ 'id': '1', 'name': 'Load Fabric' }, { 'id': '2', 'name': 'UnLoad Fabric' }, { 'id': '3', 'name': 'Close the Door' }, { 'id': '4', 'name': 'Custom Message' }]\n  chemicalSubRecordArray: ChemicalReq[] = [];\n  chemicalSubRecord: ChemicalReq;\n  rowChemicalData: any;\n  chemicalcolumnDefs = [\n    { headerName: 'Actions', field: 'index', width: 70 },\n    { headerName: 'Item Name', field: 'item_name', width: 90 },\n    { headerName: 'Concentration', field: 'concentration', width: 90 },\n    { headerName: 'LR/F_WT', field: 'lr_or_fabric_wt', width: 90 },\n    { headerName: 'Supplier Name', field: 'supplier_name', width: 90 },\n  ];\n  flagDivSForm = false;\n\n  constructor(public activeModal: NgbActiveModal) {\n    this.chemicalSubRecord = new ChemicalReq();\n  }\n\n  ngOnInit() {\n    this.chemicalcolumnDefs.forEach((column: ColDef) => {\n      if (column.field === 'index') {\n        column.cellRendererFramework = CustomRendererChemicalRecordComponent;\n        column.cellRendererParams = {\n          action: this\n        };\n      }\n    });\n    if (!this.editFunction) {\n      if (this.position > 0) {\n        this.funcObj.func_position = this.position;\n        for (let i = 1; i <= this.position; i++) {\n          this.positionValues.push(i);\n        }\n      }\n    } else {\n      this.submitButton = \"Update\";\n      if (this.position > 0) {\n        this.funcObj.func_position = this.position;\n        let index = this.functionList.findIndex(v => v.func_position == this.position);\n        if (index > -1) {\n          let ele = this.functionList[index];\n          console.log('ele.dos', ele.dosingFunction)\n          this.funcObj.func_name = ele.func_name;\n          this.funcObj.func_position = ele.func_position;\n          this.funcObj.func_value = ele.func_value;\n          this.dosingObj = ele.dosingFunction;\n          if (this.dosingObj.dosing_chemical.length) {\n            this.dosingObj.dosing_chemical.forEach((ele, index) => {\n              ele.index = index + 1;\n            });\n            this.chemicalSubRecordArray = this.dosingObj.dosing_chemical;\n            this.rowChemicalData = [...this.chemicalSubRecordArray];\n\n          }\n          this.waterObj = ele.waterDrainFunction;\n          this.tempObj = ele.tempFunction;\n          this.pumpObj = ele.pumpMotorFunction;\n          this.operatorObj = ele.operatorFunction;\n        }\n        for (let i = 1; i <= this.functionList.length; i++) {\n          this.positionValues.push(i);\n        }\n      }\n    }\n\n  }\n  onDoseTypeChange() {\n    if (this.dosingObj.dose_type == 'color') {\n      this.dosingObj.dose_while_heating = false;\n    }\n  }\n  onWaterTypeChange() {\n    if (this.waterObj.type == 'water') {\n      this.waterObj.drain_type = null;\n    } else {\n      this.waterObj.jet_level = 0;\n      this.waterObj.fabric_ratio = null;\n      this.waterObj.water_type = null;\n    }\n  }\n\n  onSubmit() {\n    let i = this.functionDropdown.findIndex(v => v.id === this.funcObj.func_value);\n    if (i > -1) {\n      this.funcObj.func_name = this.functionDropdown[i].name;\n    } else {\n      this.funcObj.func_name = '';\n    }\n    if (this.funcObj.func_value === 'temp') {\n      this.funcObj.tempFunction = this.tempObj;\n    } else if (this.funcObj.func_value === 'water') {\n      this.funcObj.waterDrainFunction = this.waterObj;\n    } else if (this.funcObj.func_value === 'dosing') {\n      this.funcObj.dosingFunction = this.dosingObj;\n      console.log('chemical', this.chemicalSubRecordArray);\n      this.funcObj.dosingFunction.dosing_chemical = this.chemicalSubRecordArray;\n    } else if (this.funcObj.func_value === 'pump') {\n      this.funcObj.pumpMotorFunction = this.pumpObj;\n    } else if (this.funcObj.func_value === 'operator') {\n      let i = this.operatorMessageList.findIndex(v => v.id === this.operatorObj.operator_code);\n      if (i > -1 && i != 3) {\n        this.operatorObj.operator_message = this.operatorMessageList[i].name;\n      }\n      this.funcObj.operatorFunction = this.operatorObj;\n    }\n    this.activeModal.close(this.funcObj);\n  }\n  onSetValueChange() {\n    if (this.tempObj.set_value > 100) {\n      this.tempObj.pressure = true;\n    } else {\n      this.tempObj.pressure = false;\n    }\n  }\n  HideShowSForm() {\n    this.flagDivSForm = !this.flagDivSForm;\n  }\n  onAddChemicalRecord(form: NgForm) {\n    let flag = 0;\n    let j = 1;\n    if (!this.chemicalSubRecordArray.length) {\n      this.chemicalSubRecord.index = j;\n    } else if (this.chemicalSubRecord.index == undefined) {\n      this.chemicalSubRecord.index = this.chemicalSubRecordArray.length + 1;\n    }\n    this.chemicalSubRecordArray.forEach(ele => {\n      if (ele.index == this.chemicalSubRecord.index) {\n        ele = this.chemicalSubRecord\n        flag = 1;\n      }\n    });\n    if (!flag) {\n      this.chemicalSubRecordArray.push(this.chemicalSubRecord);\n    }\n    this.rowChemicalData = [...this.chemicalSubRecordArray];\n    this.chemicalSubRecord = new ChemicalReq();\n    form.resetForm();\n  }\n  onEditChemicalRecord(data) {\n    let i = this.chemicalSubRecordArray.findIndex(v => v.index == data);\n    this.chemicalSubRecord = this.chemicalSubRecordArray[i];\n  }\n\n  deleteChemicalRecord(data) {\n    let i = this.chemicalSubRecordArray.findIndex(v => v.index == data);\n    this.chemicalSubRecordArray.splice(i, 1);\n    this.rowChemicalData = [...this.chemicalSubRecordArray]\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\n      return false;\n    }\n    return true;\n  }\n}\n@Component({\n  template: `\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\n  styleUrls: ['./add-edit-function.component.scss']\n})\n\nexport class CustomRendererChemicalRecordComponent implements AgRendererComponent {\n  params: any;\n\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\n  }\n  agInit(params: any): void {\n    this.params = params;\n  }\n  refresh(): boolean {\n    return false;\n  }\n\n  editRecord() {\n    this.params.action.onEditChemicalRecord(this.params.value)\n  }\n  onDeleteRecord() {\n    this.params.action.deleteChemicalRecord(this.params.value)\n  }\n}","module.exports = \"<nb-card>\\n  <nb-card-header>{{topHeader}}\\n  </nb-card-header>\\n  <nb-card-body>\\n    <form #vform=\\\"ngForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Process Name</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              [(ngModel)]=\\\"processModal.process_name\\\" name=\\\"processName\\\" #processname=\\\"ngModel\\\" required />\\n            <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                Process Name is required.\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>No. of Dying Bath</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"processModal.no_dying_bath\\\" name=\\\"dyingBath\\\"\\n              #dyingbath=\\\"ngModel\\\" required />\\n            <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\n              <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\n                No. of Dying Bath is required.\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>DC Mulitplying Fac.</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"processModal.dc_multiplying_fac\\\" name=\\\"dc\\\" #Dc=\\\"ngModel\\\"\\n              required />\\n            <div *ngIf=\\\"Dc.invalid && (Dc.dirty || Dc.touched)\\\" class=\\\"errors\\\">\\n              <div *ngIf=\\\"Dc.errors && Dc.errors.required\\\">\\n                DC Mulitplying Fac is required.\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"row col-md-12\\\">\\n\\n        <nb-accordion>\\n          <nb-accordion-item #item>\\n            <nb-accordion-item-header>\\n              SCOURING\\n            </nb-accordion-item-header>\\n            <nb-accordion-item-body>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.temperature\\\" name=\\\"scouringTemp\\\"\\n                      #ScouringTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                Process Name is required.\\n                              </div>\\n                            </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Plc Program No.</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.plc_program_no\\\"\\n                      name=\\\"scouring_program_no\\\" #ScouringProgram=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\n                                  No. of Dying Bath is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Hold Time</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.hold_time\\\" name=\\\"scouringTime\\\"\\n                      #ScouringTime=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                Process Name is required.\\n                              </div>\\n                            </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Rate Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.rate_temperature\\\"\\n                      name=\\\"scouringRateTemp\\\" #ScouringRateTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                Process Name is required.\\n                              </div>\\n                            </div> -->\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row table table-responsive\\\">\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowScouringData\\\"\\n                  [columnDefs]=\\\"scouringcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\n                  *ngIf=\\\"scouringSubRecordArray.length\\\">\\n                </ag-grid-angular>\\n              </div>\\n              <form #scouringform=\\\"ngForm\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Item Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\"\\n                        name=\\\"scouringitemName\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"scouringSubRecord.item_name\\\"\\n                        (click)=\\\"HideShowSForm()\\\" required #scouringItemName=\\\"ngModel\\\">\\n                      <div *ngIf=\\\"flagDivSForm\\\" class=\\\"dropdown\\\">\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowSForm()\\\" class=\\\"float-right\\\">[X]</a>\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\n                          <thead>\\n                            <tr>\\n                              <th>Item Name</th>\\n                              <th>Supplier Name</th>\\n                            </tr>\\n                          </thead>\\n                          <tbody>\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'scouring')\\\"\\n                              class=\\\"pointer\\\">\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\n                              <td>{{item.item_name}}</td>\\n                              <td>{{item.supplier_name}}</td>\\n                            </tr>\\n                          </tbody>\\n                        </table>\\n                      </div>\\n                      <div *ngIf=\\\"scouringItemName.invalid && (scouringItemName.dirty || scouringItemName.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"scouringItemName.errors && scouringItemName.errors.required\\\">\\n                          Item Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Concentration</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"scouringSubRecord.concentration\\\"\\n                        name=\\\"scouringConcentration\\\" #ScouringConcentration=\\\"ngModel\\\" required />\\n                      <div\\n                        *ngIf=\\\"ScouringConcentration.invalid && (ScouringConcentration.dirty || ScouringConcentration.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"ScouringConcentration.errors && ScouringConcentration.errors.required\\\">\\n                          Concentration is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>By</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"scouringSubRecord.item_by\\\"\\n                        name=\\\"scouringBy\\\" #ScouringBy=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"ScouringBy.invalid && (ScouringBy.dirty || ScouringBy.touched)\\\" class=\\\"errors\\\">\\n                        <div *ngIf=\\\"ScouringBy.errors && ScouringBy.errors.required\\\">\\n                          By is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Supplier Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled\\n                        [(ngModel)]=\\\"scouringSubRecord.supplier_name\\\" name=\\\"scouringSuppName\\\"\\n                        #ScouringSuppName=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"ScouringSuppName.invalid && (ScouringSuppName.dirty || ScouringSuppName.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"ScouringSuppName.errors && ScouringSuppName.errors.required\\\">\\n                          Supplier Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <button size=\\\"small\\\" [disabled]=\\\"scouringform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\n                      (click)=\\\"onAddScouringRecord(scouringform)\\\">Add</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </nb-accordion-item-body>\\n          </nb-accordion-item>\\n        </nb-accordion>\\n      </div>\\n      <br>\\n      <div class=\\\"row col-md-12\\\">\\n        <nb-accordion>\\n          <nb-accordion-item #item>\\n            <nb-accordion-item-header>\\n              DYING\\n            </nb-accordion-item-header>\\n            <nb-accordion-item-body>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.temperature\\\" name=\\\"dyingTemp\\\"\\n                      #DyingTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                  Process Name is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Plc Program No.</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.plc_program_no\\\" name=\\\"dying_program_no\\\"\\n                      #dyingProgram=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\n                                  <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\n                                    No. of Dying Bath is required.\\n                                  </div>\\n                                </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Hold Time</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.hold_time\\\" name=\\\"dyingTime\\\"\\n                      #DyingTime=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                  Process Name is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Rate Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.rate_temperature\\\" name=\\\"dyingRateTemp\\\"\\n                      #DyringRateTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                  Process Name is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row table table-responsive\\\">\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowDyingData\\\"\\n                  [columnDefs]=\\\"dyingcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\n                  *ngIf=\\\"dyingSubRecordArray.length\\\">\\n                </ag-grid-angular>\\n              </div>\\n              <form #dyingform=\\\"ngForm\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Item Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\"\\n                        name=\\\"dyingitemName\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"dyingSubRecord.item_name\\\"\\n                        (click)=\\\"HideShowDForm()\\\" required #dyingItemName=\\\"ngModel\\\">\\n                      <div *ngIf=\\\"flagDivDForm\\\" class=\\\"dropdown\\\">\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowDForm()\\\" class=\\\"float-right\\\">[X]</a>\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\n                          <thead>\\n                            <tr>\\n                              <th>Item Name</th>\\n                              <th>Supplier Name</th>\\n                            </tr>\\n                          </thead>\\n                          <tbody>\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'dying')\\\"\\n                              class=\\\"pointer\\\">\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\n                              <td>{{item.item_name}}</td>\\n                              <td>{{item.supplier_name}}</td>\\n                            </tr>\\n                          </tbody>\\n                        </table>\\n                      </div>\\n                      <div *ngIf=\\\"dyingItemName.invalid && (dyingItemName.dirty || dyingItemName.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"dyingItemName.errors && dyingItemName.errors.required\\\">\\n                          Item Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Concentration</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"dyingSubRecord.concentration\\\"\\n                        (keypress)=\\\"numberOnly($event)\\\" name=\\\"dyingConcentration\\\" #DyingConcentration=\\\"ngModel\\\"\\n                        required />\\n                      <div\\n                        *ngIf=\\\"DyingConcentration.invalid && (DyingConcentration.dirty || DyingConcentration.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"DyingConcentration.errors && DyingConcentration.errors.required\\\">\\n                          Concentration is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>By</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"dyingSubRecord.item_by\\\"\\n                        name=\\\"dyingBy\\\" #DyingBy=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"DyingBy.invalid && (DyingBy.dirty || DyingBy.touched)\\\" class=\\\"errors\\\">\\n                        <div *ngIf=\\\"DyingBy.errors && DyingBy.errors.required\\\">\\n                          By is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Supplier Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled\\n                        [(ngModel)]=\\\"dyingSubRecord.supplier_name\\\" name=\\\"dyingSuppName\\\" #DyingSuppName=\\\"ngModel\\\"\\n                        required />\\n                      <div *ngIf=\\\"DyingSuppName.invalid && (DyingSuppName.dirty || DyingSuppName.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"DyingSuppName.errors && DyingSuppName.errors.required\\\">\\n                          Supplier Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <button size=\\\"small\\\" [disabled]=\\\"dyingform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\n                      (click)=\\\"onAddDyingRecord(dyingform)\\\">Add</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </nb-accordion-item-body>\\n          </nb-accordion-item>\\n        </nb-accordion>\\n      </div>\\n      <br>\\n      <div class=\\\"row col-md-12\\\">\\n        <nb-accordion>\\n          <nb-accordion-item #item>\\n            <nb-accordion-item-header>\\n              RC\\n            </nb-accordion-item-header>\\n            <nb-accordion-item-body>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.temperature\\\" name=\\\"rcTemp\\\"\\n                      #RcTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                  Process Name is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Plc Program No.</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.plc_program_no\\\" name=\\\"rc_program_no\\\"\\n                      #RcProgram=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\n                                  <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\n                                    No. of Dying Bath is required.\\n                                  </div>\\n                                </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Hold Time</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.hold_time\\\" name=\\\"rcTime\\\"\\n                      #RcTime=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                  Process Name is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Rate Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.rate_temperature\\\" name=\\\"rcRateTemp\\\"\\n                      #RcRateTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                  Process Name is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row table table-responsive\\\">\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowRCData\\\"\\n                  [columnDefs]=\\\"rccolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\n                  *ngIf=\\\"rcSubRecordArray.length\\\">\\n                </ag-grid-angular>\\n              </div>\\n              <form #rcform=\\\"ngForm\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Item Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\" name=\\\"rcitemName\\\"\\n                        autocomplete=\\\"off\\\" [(ngModel)]=\\\"rcSubRecord.item_name\\\" (click)=\\\"HideShowRForm()\\\" required\\n                        #rcItemName=\\\"ngModel\\\">\\n                      <div *ngIf=\\\"flagDivRForm\\\" class=\\\"dropdown\\\">\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowRForm()\\\" class=\\\"float-right\\\">[X]</a>\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\n                          <thead>\\n                            <tr>\\n                              <th>Item Name</th>\\n                              <th>Supplier Name</th>\\n                            </tr>\\n                          </thead>\\n                          <tbody>\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'rc')\\\"\\n                              class=\\\"pointer\\\">\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\n                              <td>{{item.item_name}}</td>\\n                              <td>{{item.supplier_name}}</td>\\n                            </tr>\\n                          </tbody>\\n                        </table>\\n                      </div>\\n                      <div *ngIf=\\\"rcItemName.invalid && (rcItemName.dirty || rcItemName.touched)\\\" class=\\\"errors\\\">\\n                        <div *ngIf=\\\"rcItemName.errors && rcItemName.errors.required\\\">\\n                          Item Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Concentration</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"rcSubRecord.concentration\\\"\\n                        name=\\\"rcConcentration\\\" #RcConcentration=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"RcConcentration.invalid && (RcConcentration.dirty || RcConcentration.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"RcConcentration.errors && RcConcentration.errors.required\\\">\\n                          Concentration is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>By</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"rcSubRecord.item_by\\\" name=\\\"rcBy\\\"\\n                        #RcBy=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"RcBy.invalid && (RcBy.dirty || RcBy.touched)\\\" class=\\\"errors\\\">\\n                        <div *ngIf=\\\"RcBy.errors && RcBy.errors.required\\\">\\n                          By is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Supplier Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled [(ngModel)]=\\\"rcSubRecord.supplier_name\\\"\\n                        name=\\\"rcSuppName\\\" #RcSuppName=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"RcSuppName.invalid && (RcSuppName.dirty || RcSuppName.touched)\\\" class=\\\"errors\\\">\\n                        <div *ngIf=\\\"RcSuppName.errors && RcSuppName.errors.required\\\">\\n                          Supplier Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <button size=\\\"small\\\" [disabled]=\\\"rcform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\n                      (click)=\\\"onAddRCRecord(rcform)\\\">Add</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </nb-accordion-item-body>\\n          </nb-accordion-item>\\n        </nb-accordion>\\n      </div>\\n      <br>\\n      <div class=\\\"row col-md-12\\\">\\n        <nb-accordion>\\n          <nb-accordion-item #item>\\n            <nb-accordion-item-header>\\n              COLD WASH\\n            </nb-accordion-item-header>\\n            <nb-accordion-item-body>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.temperature\\\" name=\\\"coldWashTemp\\\"\\n                      #ColdWashTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                Process Name is required.\\n                              </div>\\n                            </div> -->\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Plc Program No.</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.plc_program_no\\\"\\n                      name=\\\"coldWash_program_no\\\" #coldWashProgram=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\n                                <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\n                                  No. of Dying Bath is required.\\n                                </div>\\n                              </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Hold Time</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.hold_time\\\" name=\\\"coldWashTime\\\"\\n                      #coldWashtime=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                Process Name is required.\\n                              </div>\\n                            </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Rate Temperature</label>\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.rate_temperature\\\"\\n                      name=\\\"coldWashRateTemp\\\" #ColdWashRateTemp=\\\"ngModel\\\" />\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                                Process Name is required.\\n                              </div>\\n                            </div> -->\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row table table-responsive\\\">\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowColdWashData\\\"\\n                  [columnDefs]=\\\"coldwashcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\n                  *ngIf=\\\"coldWashSubRecordArray.length\\\">\\n                </ag-grid-angular>\\n              </div>\\n              <form #coldwashform=\\\"ngForm\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Item Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\"\\n                        name=\\\"coldWashitemName\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"coldWashSubRecord.item_name\\\"\\n                        (click)=\\\"HideShowCForm()\\\" required #ColdWashItemName=\\\"ngModel\\\">\\n                      <div *ngIf=\\\"flagDivCForm\\\" class=\\\"dropdown\\\">\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowCForm()\\\" class=\\\"float-right\\\">[X]</a>\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\n                          <thead>\\n                            <tr>\\n                              <th>Item Name</th>\\n                              <th>Supplier Name</th>\\n                            </tr>\\n                          </thead>\\n                          <tbody>\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'cold_wash')\\\"\\n                              class=\\\"pointer\\\">\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\n                              <td>{{item.item_name}}</td>\\n                              <td>{{item.supplier_name}}</td>\\n                            </tr>\\n                          </tbody>\\n                        </table>\\n                      </div>\\n                      <div *ngIf=\\\"ColdWashItemName.invalid && (ColdWashItemName.dirty || ColdWashItemName.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"ColdWashItemName.errors && ColdWashItemName.errors.required\\\">\\n                          Item Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Concentration</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"coldWashSubRecord.concentration\\\"\\n                        name=\\\"coldWashConcentration\\\" #ColdWashConcentration=\\\"ngModel\\\" required />\\n                      <div\\n                        *ngIf=\\\"ColdWashConcentration.invalid && (ColdWashConcentration.dirty || ColdWashConcentration.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"ColdWashConcentration.errors && ColdWashConcentration.errors.required\\\">\\n                          Concentration is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>By</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"coldWashSubRecord.item_by\\\"\\n                        name=\\\"coldWashBy\\\" #ColdWashBy=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"ColdWashBy.invalid && (ColdWashBy.dirty || ColdWashBy.touched)\\\" class=\\\"errors\\\">\\n                        <div *ngIf=\\\"ColdWashBy.errors && ColdWashBy.errors.required\\\">\\n                          By is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Supplier Name</label>\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled\\n                        [(ngModel)]=\\\"coldWashSubRecord.supplier_name\\\" name=\\\"coldWashSuppName\\\"\\n                        #ColdWashSuppName=\\\"ngModel\\\" required />\\n                      <div *ngIf=\\\"ColdWashSuppName.invalid && (ColdWashSuppName.dirty || ColdWashSuppName.touched)\\\"\\n                        class=\\\"errors\\\">\\n                        <div *ngIf=\\\"ColdWashSuppName.errors && ColdWashSuppName.errors.required\\\">\\n                          Supplier Name is required.\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <button size=\\\"small\\\" [disabled]=\\\"coldwashform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\n                      (click)=\\\"onAddColdWashRecord(coldwashform)\\\">Add</button>\\n                  </div>\\n                </div>\\n              </form>\\n\\n            </nb-accordion-item-body>\\n          </nb-accordion-item>\\n        </nb-accordion>\\n      </div>\\n      <br>\\n      <div class=\\\"box-footer\\\">\\n        <button [disabled]=\\\"vform.invalid\\\" nbButton (click)=\\\"onCustomFormSubmit(vform)\\\">{{subBtnName}}</button>\\n        &nbsp;\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/process/view-process-list' id=\\\"Cancel\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3MvYWRkLWVkaXQtcHJvY2Vzcy9hZGQtZWRpdC1wcm9jZXNzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { Process, ProcessRecord, ProcessSubRecord, ProcessReq, ProcessReqRecord } from '../../../@theme/model/process-class';\nimport { ViewReqObj, User } from '../../../@theme/model/user-class';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProcessService } from '../../../@theme/services/process.service';\nimport { AuthService } from '../../../@theme/services/auth.service';\nimport { ColDef } from 'ag-grid-community';\nimport { NgForm } from '@angular/forms';\nimport { AgRendererComponent } from 'ag-grid-angular';\nimport { SupplierItemRecord } from '../../../@theme/model/supplier-class';\nimport { SupplierService } from '../../../@theme/services/supplier.service';\n\n@Component({\n  selector: 'ngx-add-edit-process',\n  templateUrl: './add-edit-process.component.html',\n  styleUrls: ['./add-edit-process.component.scss']\n})\nexport class AddEditProcessComponent implements OnInit {\n\n\n  @ViewChild('instance') instance: NgbTypeahead;\n  focus$ = new Subject<string>();\n  click$ = new Subject<string>();\n  processModal: Process;\n  flagDivSForm = false;\n  flagDivRForm = false;\n  flagDivDForm = false;\n  flagDivCForm = false;\n  id: any;\n  subBtnName = '';\n  topHeader = '';\n  viewFlag = false;\n  rowScouringData: any;\n  rowRCData: any;\n  rowDyingData: any;\n  rowColdWashData: any;\n  processRecord: ProcessRecord[] = [];\n  scouringRecord: ProcessRecord;\n  scouringSubRecordArray: ProcessSubRecord[] = [];\n  scouringSubRecord: ProcessSubRecord;\n  rcRecord: ProcessRecord;\n  rcSubRecordArray: ProcessSubRecord[] = [];\n  rcSubRecord: ProcessSubRecord;\n  dyingRecord: ProcessRecord;\n  dyingSubRecordArray: ProcessSubRecord[] = [];\n  dyingSubRecord: ProcessSubRecord;\n  coldWashRecord: ProcessRecord;\n  coldWashSubRecordArray: ProcessSubRecord[] = [];\n  coldWashSubRecord: ProcessSubRecord;\n  currentUserId: any;\n  currentUserHeadid: any;\n  currentUser$: Subscription;\n  currentUser: User;\n  itemList: SupplierItemRecord[] = [];\n  processReq: ProcessReq;\n  processReqRecord: ProcessReqRecord[] = [];\n\n  scouringcolumnDefs = [\n    { headerName: 'Actions', field: 'index', width: 70 },\n    { headerName: 'Item Name', field: 'item_name' },\n    { headerName: 'Concentration', field: 'concentration' },\n    { headerName: 'By', field: 'item_by' },\n    { headerName: 'Supplier Name', field: 'supplier_name' },\n  ];\n  dyingcolumnDefs = [\n    { headerName: 'Actions', field: 'index', width: 70 },\n    { headerName: 'Item Name', field: 'item_name' },\n    { headerName: 'Concentration', field: 'concentration' },\n    { headerName: 'By', field: 'item_by' },\n    { headerName: 'Supplier Name', field: 'supplier_name' },\n  ];\n  rccolumnDefs = [\n    { headerName: 'Actions', field: 'index', width: 70 },\n    { headerName: 'Item Name', field: 'item_name' },\n    { headerName: 'Concentration', field: 'concentration' },\n    { headerName: 'By', field: 'item_by' },\n    { headerName: 'Supplier Name', field: 'supplier_name' },\n  ];\n  coldwashcolumnDefs = [\n    { headerName: 'Actions', field: 'index', width: 70 },\n    { headerName: 'Item Name', field: 'item_name' },\n    { headerName: 'Concentration', field: 'concentration' },\n    { headerName: 'By', field: 'item_by' },\n    { headerName: 'Supplier Name', field: 'supplier_name' },\n  ];\n  currentUserPermission: any;\n  currentUserGroupUserIds: any;\n\n  constructor(private toasterService: ToastrService, private route: ActivatedRoute,\n    private router: Router, private processService: ProcessService,\n    private authService: AuthService, private supplierService: SupplierService) {\n    this.processModal = new Process();\n    this.scouringRecord = new ProcessRecord();\n    this.dyingRecord = new ProcessRecord();\n    this.rcRecord = new ProcessRecord();\n    this.coldWashRecord = new ProcessRecord();\n    this.scouringSubRecord = new ProcessSubRecord();\n    this.coldWashSubRecord = new ProcessSubRecord();\n    this.dyingSubRecord = new ProcessSubRecord();\n    this.rcSubRecord = new ProcessSubRecord();\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\n      if (ele != null) {\n        this.currentUser = ele.user;\n        this.currentUserId = ele.user.user_id;\n        this.currentUserHeadid = ele.user.user_head_id;\n        this.currentUserPermission = ele.user_permission;\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.currentUser$.unsubscribe();\n  }\n  ngOnInit() {\n    this.setScouringColumns();\n    this.setRCColumns();\n    this.setColdWashColumns();\n    this.setDyingColumns();\n    this.getItemList();\n    this.onPageLoad();\n  }\n  onPageLoad() {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id != null) {\n      if (this.id) {\n        this.subBtnName = 'Update';\n        this.topHeader = 'Edit Process';\n\n      } else {\n        this.topHeader = 'Process View';\n        this.viewFlag = true;\n      }\n      this.processService.getProcessById(this.id).subscribe(\n        data => {\n          if (!data[0].error) {\n            this.processModal = data[0].data.process[0];\n            this.processReqRecord = data[0].data.process_record;\n            if (this.processReqRecord.length) {\n              let scouringIndex = 0;\n              let dyingIndex = 0;\n              let rcIndex = 0;\n              let coldWashIndex = 0;\n              this.processReqRecord.forEach((ele, index) => {\n                if (ele.type === 'scouring') {\n                  if (!scouringIndex) {\n                    this.setProcessRecordOnLoad(this.scouringRecord, ele);\n                  }\n                  scouringIndex += 1;\n                  this.setProcessSubRecordOnLoad(this.scouringSubRecordArray, this.scouringSubRecord, ele, scouringIndex);\n                } else if (ele.type === 'rc') {\n                  if (!rcIndex) {\n                    this.setProcessRecordOnLoad(this.rcRecord, ele);\n                  }\n                  rcIndex += 1;\n                  this.setProcessSubRecordOnLoad(this.rcSubRecordArray, this.rcSubRecord, ele, rcIndex);\n                } else if (ele.type === 'cold_wash') {\n                  if (!coldWashIndex) {\n                    this.setProcessRecordOnLoad(this.coldWashRecord, ele);\n                  }\n                  coldWashIndex += 1;\n                  this.setProcessSubRecordOnLoad(this.coldWashSubRecordArray, this.coldWashSubRecord, ele, coldWashIndex);\n                } else if (ele.type === 'dying') {\n                  if (!dyingIndex) {\n                    this.setProcessRecordOnLoad(this.dyingRecord, ele);\n                  }\n                  dyingIndex += 1;\n                  this.setProcessSubRecordOnLoad(this.dyingSubRecordArray, this.dyingSubRecord, ele, dyingIndex);\n                }\n              })\n            }\n            console.log('dying', this.dyingSubRecordArray)\n            this.rowColdWashData = this.coldWashSubRecordArray;\n            this.rowDyingData = this.dyingSubRecordArray;\n            this.rowRCData = this.rcSubRecordArray;\n            this.rowScouringData = this.scouringSubRecordArray;\n            this.processModal.process_record = this.processRecord\n          } else {\n            this.toasterService.error(data.message);\n          }\n        }, error => {\n          this.toasterService.error('Server Error');\n        });\n    } else {\n      this.subBtnName = 'Save';\n      this.topHeader = 'Add Process';\n    }\n  }\n  setProcessRecordOnLoad(processRecord, ele) {\n    processRecord.type = ele.index;\n    processRecord.control_id = ele.control_id;\n    processRecord.temperature = ele.temperature;\n    processRecord.plc_program_no = ele.plc_program_no;\n    processRecord.hold_time = ele.hold_time;\n    processRecord.rate_temperature = ele.rate_temperature;\n  }\n  setProcessSubRecordOnLoad(prcoessSubRecordArray, processSubRecordObj, ele, index) {\n    processSubRecordObj = new ProcessSubRecord();\n    processSubRecordObj.entry_id = ele.entry_id;\n    processSubRecordObj.index = index;\n    processSubRecordObj.item_id = ele.item_id;\n    processSubRecordObj.item_name = ele.item_name;\n    processSubRecordObj.concentration = ele.concentration;\n    processSubRecordObj.item_by = ele.item_by;\n    processSubRecordObj.supplier_name = ele.supplier_name;\n    prcoessSubRecordArray.push(processSubRecordObj);\n  }\n  setScouringColumns() {\n    this.scouringcolumnDefs.forEach((column: ColDef) => {\n      if (column.field === 'index') {\n        column.cellRendererFramework = CustomRendererScouringRecordComponent;\n        column.cellRendererParams = {\n          action: this\n        };\n      }\n    });\n  }\n  setRCColumns() {\n    this.rccolumnDefs.forEach((column: ColDef) => {\n      if (column.field === 'index') {\n        column.cellRendererFramework = CustomRendererRCRecordComponent;\n        column.cellRendererParams = {\n          action: this\n        };\n      }\n    });\n  }\n  setColdWashColumns() {\n    this.coldwashcolumnDefs.forEach((column: ColDef) => {\n      if (column.field === 'index') {\n        column.cellRendererFramework = CustomRendererColdWashRecordComponent;\n        column.cellRendererParams = {\n          action: this\n        };\n      }\n    });\n  }\n  setDyingColumns() {\n    this.dyingcolumnDefs.forEach((column: ColDef) => {\n      if (column.field === 'index') {\n        column.cellRendererFramework = CustomRendererDyingRecordComponent;\n        column.cellRendererParams = {\n          action: this\n        };\n      }\n    });\n  }\n\n  getItemList() {\n    console.log('dsae');\n    this.supplierService.getAllSupplierItemData().subscribe(data => {\n      if (!data[0].error) {\n        this.itemList = data[0].data;\n      }\n    })\n  }\n  selectItem(value, table_name) {\n    this.flagDivSForm = false;\n    this.flagDivCForm = false;\n    this.flagDivDForm = false;\n    this.flagDivRForm = false;\n    if (table_name === 'scouring') {\n      this.scouringSubRecord.item_id = value.entry_id;\n      this.scouringSubRecord.item_name = value.item_name;\n      this.scouringSubRecord.supplier_name = value.supplier_name;\n    } else if (table_name === 'rc') {\n      this.rcSubRecord.item_id = value.entry_id;\n      this.rcSubRecord.item_name = value.item_name;\n      this.rcSubRecord.supplier_name = value.supplier_name;\n    } else if (table_name === 'dying') {\n      this.dyingSubRecord.item_id = value.entry_id;\n      this.dyingSubRecord.item_name = value.item_name;\n      this.dyingSubRecord.supplier_name = value.supplier_name;\n    } else if (table_name === 'cold_wash') {\n      this.coldWashSubRecord.item_id = value.entry_id;\n      this.coldWashSubRecord.item_name = value.item_name;\n      this.coldWashSubRecord.supplier_name = value.supplier_name;\n    }\n  }\n  HideShowSForm() {\n    this.flagDivSForm = !this.flagDivSForm;\n  }\n  HideShowRForm() {\n    this.flagDivRForm = !this.flagDivRForm;\n  }\n  HideShowDForm() {\n    this.flagDivDForm = !this.flagDivDForm;\n  }\n  HideShowCForm() {\n    this.flagDivCForm = !this.flagDivCForm;\n  }\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\n      return false;\n    }\n    return true;\n  }\n  onAddScouringRecord(form: NgForm) {\n    let flag = 0;\n    let j = 1;\n    if (!this.scouringSubRecordArray.length) {\n      this.scouringSubRecord.index = j;\n    } else if (this.scouringSubRecord.index == undefined) {\n      this.scouringSubRecord.index = this.scouringSubRecordArray.length + 1;\n    }\n    this.scouringSubRecordArray.forEach(ele => {\n      if (ele.index == this.scouringSubRecord.index) {\n        ele = this.scouringSubRecord\n        flag = 1;\n      }\n    });\n    if (!flag) {\n      this.scouringSubRecordArray.push(this.scouringSubRecord);\n    }\n    this.rowScouringData = [...this.scouringSubRecordArray];\n    this.scouringSubRecord = new ProcessSubRecord();\n    form.resetForm();\n  }\n\n  onEditScouringRecord(data) {\n    console.log('data', data);\n    let i = this.scouringSubRecordArray.findIndex(v => v.index == data);\n    console.log('index', i);\n    console.log('record', this.scouringSubRecordArray)\n    this.scouringSubRecord = this.scouringSubRecordArray[i];\n  }\n\n  deleteScouringRecord(data) {\n    console.log(data);\n    let i = this.scouringSubRecordArray.findIndex(v => v.index == data);\n    console.log('index', i);\n    this.scouringSubRecordArray.splice(i, 1);\n    this.rowScouringData = [...this.scouringSubRecordArray]\n  }\n\n  onAddRCRecord(form: NgForm) {\n    let flag = 0;\n    let j = 1;\n    if (!this.rcSubRecordArray.length) {\n      this.rcSubRecord.index = j;\n    } else if (this.rcSubRecord.index == undefined) {\n      this.rcSubRecord.index = this.rcSubRecordArray.length + 1;\n    }\n    this.rcSubRecordArray.forEach(ele => {\n      if (ele.index == this.rcSubRecord.index) {\n        ele = this.rcSubRecord\n        flag = 1;\n      }\n    });\n    if (!flag) {\n      this.rcSubRecordArray.push(this.rcSubRecord);\n    }\n    this.rowRCData = [...this.rcSubRecordArray];\n    this.rcSubRecord = new ProcessSubRecord();\n    form.resetForm();\n  }\n\n  onEditRCRecord(data) {\n    let i = this.rcSubRecordArray.findIndex(v => v.index == data);\n    this.rcSubRecord = this.rcSubRecordArray[i];\n  }\n\n  deleteRCRecord(data) {\n    let i = this.rcSubRecordArray.findIndex(v => v.index == data);\n    this.rcSubRecordArray.splice(i, 1);\n    this.rowRCData = [...this.rcSubRecordArray]\n  }\n  onAddDyingRecord(form: NgForm) {\n    let flag = 0;\n    let j = 1;\n    if (!this.dyingSubRecordArray.length) {\n      this.dyingSubRecord.index = j;\n    } else if (this.dyingSubRecord.index == undefined) {\n      this.dyingSubRecord.index = this.dyingSubRecordArray.length + 1;\n    }\n    this.dyingSubRecordArray.forEach(ele => {\n      if (ele.index == this.dyingSubRecord.index) {\n        ele = this.dyingSubRecord\n        flag = 1;\n      }\n    });\n    if (!flag) {\n      this.dyingSubRecordArray.push(this.dyingSubRecord);\n    }\n    this.rowDyingData = [...this.dyingSubRecordArray];\n    this.dyingSubRecord = new ProcessSubRecord();\n    form.resetForm();\n  }\n\n  onEditDyingRecord(data) {\n    console.log('data', data);\n    let i = this.dyingSubRecordArray.findIndex(v => v.index == data);\n    this.dyingSubRecord = this.dyingSubRecordArray[i];\n  }\n\n  deleteDyingRecord(data) {\n    let i = this.dyingSubRecordArray.findIndex(v => v.index == data);\n    this.dyingSubRecordArray.splice(i, 1);\n    this.rowDyingData = [...this.dyingSubRecordArray]\n  }\n  onAddColdWashRecord(form: NgForm) {\n    let flag = 0;\n    let j = 1;\n    if (!this.coldWashSubRecordArray.length) {\n      this.coldWashSubRecord.index = j;\n    } else if (this.coldWashSubRecord.index == undefined) {\n      this.coldWashSubRecord.index = this.coldWashSubRecordArray.length + 1;\n    }\n    this.coldWashSubRecordArray.forEach(ele => {\n      if (ele.index == this.coldWashSubRecord.index) {\n        ele = this.coldWashSubRecord\n        flag = 1;\n      }\n    });\n    if (!flag) {\n      this.coldWashSubRecordArray.push(this.coldWashSubRecord);\n    }\n    this.rowColdWashData = [...this.coldWashSubRecordArray];\n    this.coldWashSubRecord = new ProcessSubRecord();\n    form.resetForm();\n  }\n\n  onEditColdWashRecord(data) {\n    let i = this.coldWashSubRecordArray.findIndex(v => v.index == data);\n    this.coldWashSubRecord = this.coldWashSubRecordArray[i];\n  }\n\n  deleteColdWashRecord(data) {\n    let i = this.coldWashSubRecordArray.findIndex(v => v.index == data);\n    this.coldWashSubRecordArray.splice(i, 1);\n    this.rowColdWashData = [...this.coldWashSubRecordArray]\n  }\n\n  onCustomFormSubmit(form: NgForm) {\n    this.processReq = new ProcessReq();\n    this.processReqRecord = [];\n    this.processReq.entry_id = this.processModal.entry_id;\n    this.processReq.process_name = this.processModal.process_name;\n    this.processReq.no_dying_bath = this.processModal.no_dying_bath;\n    this.processReq.dc_multiplying_fac = this.processModal.dc_multiplying_fac;\n    this.processReq.created_by = this.processModal.created_by;\n    this.processReq.created_date = this.processModal.created_date;\n    this.processReq.updated_by = this.processModal.updated_by;\n    this.processReq.updated_date = this.processModal.updated_date;\n    if (this.scouringSubRecordArray.length) {\n      this.scouringSubRecordArray.forEach(ele => {\n        this.getProcessReqRecord(ele, this.scouringRecord, 'scouring');\n      })\n    }\n    if (this.dyingSubRecordArray.length) {\n      this.dyingSubRecordArray.forEach(ele => {\n        this.getProcessReqRecord(ele, this.dyingRecord, 'dying');\n      })\n    }\n    if (this.rcSubRecordArray.length) {\n      this.rcSubRecordArray.forEach(ele => {\n        this.getProcessReqRecord(ele, this.rcRecord, 'rc');\n      })\n    }\n    if (this.coldWashSubRecordArray.length) {\n      this.coldWashSubRecordArray.forEach(ele => {\n        this.getProcessReqRecord(ele, this.coldWashRecord, 'cold_wash');\n      })\n    }\n    if (this.processReqRecord.length) {\n      this.processReq.process_req_record = this.processReqRecord;\n    }\n    console.log('process', this.processReq);\n\n    // for update\n    if (this.id) {\n      this.processReq.updated_by = this.currentUserId;\n      this.processService.updateProcess(this.processReq).subscribe(data => {\n        console.log(data)\n        if (!data[0].error) {\n          this.toasterService.success(data[0].message);\n          form.resetForm();\n          this.router.navigate(['/pages/process/view-process-list']);\n        } else {\n          this.toasterService.error(data[0].message);\n        }\n      }, error => {\n        this.toasterService.error('Server Error');\n      });\n    } else {\n      this.processReq.created_by = this.currentUserId;\n      this.processReq.user_head_id = this.currentUserHeadid;\n      console.log(this.processReq)\n      this.processService.addProcess(this.processReq).subscribe(data => {\n        data = data[0]\n        if (!data.error) {\n          this.toasterService.success(data.message);\n          form.resetForm();\n          this.router.navigate(['/pages/process/view-process-list']);\n        } else {\n          this.toasterService.error(data.message);\n        }\n      }, error => {\n        this.toasterService.error('Server Error');\n      });\n    }\n  }\n\n  getProcessReqRecord(ele, record, type) {\n    let processSingleReqRecord = new ProcessReqRecord();\n    processSingleReqRecord.entry_id = ele.entry_id;\n    processSingleReqRecord.index = ele.index;\n    processSingleReqRecord.item_id = ele.item_id;\n    processSingleReqRecord.item_name = ele.item_name;\n    processSingleReqRecord.concentration = ele.concentration;\n    processSingleReqRecord.supplier_name = ele.supplier_name;\n    processSingleReqRecord.item_by = ele.item_by;\n    processSingleReqRecord.control_id = record.control_id;\n    processSingleReqRecord.type = type;\n    processSingleReqRecord.temperature = record.temperature;\n    processSingleReqRecord.plc_program_no = record.plc_program_no;\n    processSingleReqRecord.hold_time = record.hold_time;\n    processSingleReqRecord.rate_temperature = record.rate_temperature;\n    this.processReqRecord.push(processSingleReqRecord);\n  }\n}\n@Component({\n  template: `\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\n  styleUrls: ['./add-edit-process.component.scss']\n})\n\nexport class CustomRendererScouringRecordComponent implements AgRendererComponent {\n  params: any;\n\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\n  }\n  agInit(params: any): void {\n    this.params = params;\n  }\n  refresh(): boolean {\n    return false;\n  }\n\n  editRecord() {\n    console.log('this', this.params.value)\n    this.params.action.onEditScouringRecord(this.params.value)\n  }\n  onDeleteRecord() {\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\n    modalRef.componentInstance.titleFrom = 'Delete record ';\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\n    modalRef.result\n      .then((res) => {\n        console.log('rex', res);\n        if (res) {\n          this.params.action.deleteScouringRecord(this.params.value)\n        }\n      });\n  }\n}\n\n@Component({\n  template: `\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\n  styleUrls: ['./add-edit-process.component.scss']\n})\n\nexport class CustomRendererRCRecordComponent implements AgRendererComponent {\n  params: any;\n\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\n  }\n  agInit(params: any): void {\n    this.params = params;\n  }\n  refresh(): boolean {\n    return false;\n  }\n\n  editRecord() {\n    this.params.action.onEditRCRecord(this.params.value)\n  }\n  onDeleteRecord() {\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\n    modalRef.componentInstance.titleFrom = 'Delete record ';\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\n    modalRef.result\n      .then((result) => {\n        if (result) {\n          this.params.action.deleteRCRecord(this.params.value)\n        }\n      });\n  }\n}\n\n@Component({\n  template: `\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\n  styleUrls: ['./add-edit-process.component.scss']\n})\n\nexport class CustomRendererColdWashRecordComponent implements AgRendererComponent {\n  params: any;\n\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\n  }\n  agInit(params: any): void {\n    this.params = params;\n  }\n  refresh(): boolean {\n    return false;\n  }\n\n  editRecord() {\n    this.params.action.onEditColdWashRecord(this.params.value)\n  }\n  onDeleteRecord() {\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\n    modalRef.componentInstance.titleFrom = 'Delete record ';\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\n    modalRef.result\n      .then((result) => {\n        if (result) {\n          this.params.action.deleteColdWashRecord(this.params.value)\n        }\n      });\n  }\n}\n\n@Component({\n  template: `\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\n  styleUrls: ['./add-edit-process.component.scss']\n})\n\nexport class CustomRendererDyingRecordComponent implements AgRendererComponent {\n  params: any;\n\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\n  }\n  agInit(params: any): void {\n    this.params = params;\n  }\n  refresh(): boolean {\n    return false;\n  }\n\n  editRecord() {\n    console.log('this.params', this.params.action);\n    this.params.action.onEditDyingRecord(this.params.value)\n  }\n  onDeleteRecord() {\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\n    modalRef.componentInstance.titleFrom = 'Delete record ';\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\n    modalRef.result\n      .then((result) => {\n        if (result) {\n          this.params.action.deleteDyingRecord(this.params.value)\n        }\n      });\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Step</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<form #stepForm=\\\"ngForm\\\">\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 form-group\\\">\\n        <label>Step Name</label>\\n        <input class=\\\"form-control input-group\\\" type=\\\"text\\\" name=\\\"stepName\\\" [(ngModel)]=\\\"step_name\\\" #name=\\\"ngModel\\\">\\n        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"errors\\\">\\n          <div *ngIf=\\\"name.errors && name.errors.required\\\">\\n            Step Name is required.\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Step Position</label>\\n          <select [disabled]=\\\"editStep\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"step_position\\\" name=\\\"stepNo\\\"\\n            #position=\\\"ngModel\\\" required>\\n            <option *ngFor=\\\"let p of positionValues\\\" [value]=\\\"p\\\">{{p}}</option>\\n          </select>\\n          <div *ngIf=\\\"position.invalid && (position.dirty || position.touched)\\\" class=\\\"errors\\\">\\n            <div *ngIf=\\\"position.errors && position.errors.required\\\">\\n              Step Position is required.\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n      </div>\\n      <div class=\\\"col-md-5\\\" *ngIf=\\\"stepList.length\\\">\\n        <h5>Current Steps:</h5>\\n        <div *ngFor=\\\"let i of stepList;let z=index\\\">\\n          <span>{{z+1}}.</span>&nbsp;<span>{{i.step_name}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button nbButton [disabled]=\\\"stepForm.invalid\\\" (click)=\\\"onCreate()\\\">{{submitButton}}</button>\\n    <button nbButton (click)=\\\"activeModal.close(false)\\\">Cancel</button>\\n  </div>\\n</form>\"","module.exports = \".select.btn-mini {\\n  height: auto !important;\\n  line-height: 14px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9hZGQtc3RlcC9DOlxcVXNlcnNcXERFTExcXERvd25sb2Fkc1xcbmd4LXdpcmVmcmFtZS00Y2E0M2NkOGFiMjU0NzhhMDQ5MTc3MGMxMjBhN2E1NWZiYjgyYzVlL3NyY1xcYXBwXFxwYWdlc1xccHJvY2Vzc1xcYWRkLXN0ZXBcXGFkZC1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksd0JBQXVCO0VBQ3ZCLDZCQUE0QixFQUMvQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3MvYWRkLXN0ZXAvYWRkLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0LmJ0bi1taW5pIHtcbiAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbiAgICBsaW5lLWhlaWdodDogMTRweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { position } from 'html2canvas/dist/types/css/property-descriptors/position';\n\n@Component({\n  selector: 'ngx-add-step',\n  templateUrl: './add-step.component.html',\n  styleUrls: ['./add-step.component.scss']\n})\nexport class AddStepComponent implements OnInit {\n\n  step_name = '';\n  @Input() position;\n  step_position = 1;\n  positionValues = [];\n  @Input() stepList = [];\n  @Input() editStep: any;\n  submitButton = \"Add\";\n\n  constructor(public activeModal: NgbActiveModal) {\n\n  }\n\n  ngOnInit() {\n    if (!this.editStep) {\n      if (this.position > 0) {\n        this.step_position = this.position;\n        for (let i = 1; i <= this.position; i++) {\n          this.positionValues.push(i);\n        }\n      }\n    } else {\n      this.submitButton = \"Update\";\n      if (this.position > 0) {\n        this.step_position = this.position;\n        this.step_name = this.stepList[this.position - 1].step_name;\n        for (let i = 1; i <= this.stepList.length; i++) {\n          this.positionValues.push(i);\n        }\n      }\n    }\n\n  }\n  onCreate() {\n    let obj = { 'name': this.step_name, 'position': this.step_position };\n    this.activeModal.close(obj);\n  }\n}\n","module.exports = \"<nb-card>\\n  <nb-card-header>Dynamic Process\\n  </nb-card-header>\\n  <nb-card-body>\\n    <form #vform=\\\"ngForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 ml-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Process Name</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              [(ngModel)]=\\\"processModal.process_name\\\" name=\\\"processName\\\" #processname=\\\"ngModel\\\" required />\\n            <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\n              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\n                Process Name is required.\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3 ml-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Time (minutes)</label>\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\n              [(ngModel)]=\\\"processModal.time\\\" name=\\\"timeMin\\\" #processtime=\\\"ngModel\\\" required (keypress)=\\\"numberOnly($event)\\\"/>\\n            <div *ngIf=\\\"processtime.invalid && (processtime.dirty || processtime.touched)\\\" class=\\\"errors\\\">\\n              <div *ngIf=\\\"processtime.errors && processtime.errors.required\\\">\\n                Process Time is required.\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div>\\n          <i class=\\\"fa fa-plus-circle mr-2\\\" style=\\\"color:#4ca6ff;font-size:25px;cursor: pointer;margin: 23px;\\\"\\n            (click)=\\\"onAddStep()\\\"></i>\\n        </div>\\n      </div>\\n      <!-- <br> -->\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"stepList.length\\\">\\n        <div cdkDropList class=\\\"example-list\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n\\n          <nb-accordion *ngFor=\\\"let step of stepList\\\" cdkDragLockAxis=\\\"y\\\" cdkDrag>\\n            <nb-accordion-item #item (click)=\\\"onStepClick(step)\\\">\\n              <nb-accordion-item-header class=\\\"item-header\\\">\\n                {{step.step_name}}\\n                <i class=\\\"fa fa-plus-circle\\\" style=\\\"color:green;font-size:25px;cursor: pointer;margin-right: 69px;\\\"\\n                  (click)=\\\"onAddFunction(step)\\\"></i>\\n                <i class=\\\"ft-edit-2 font-medium-1\\\" style=\\\"color:#4ca6ff;margin-right: 41px;\\\" (click)=\\\"onEditStep(step)\\\">\\n                </i>\\n                <i class=\\\"ft-trash font-medium-1\\\" style=\\\"color:red;margin-right: 17px;\\\" (click)=\\\"onDeleteStep(step)\\\">\\n                </i>\\n              </nb-accordion-item-header>\\n              <nb-accordion-item-body>\\n                <div *ngIf=\\\"step.functionList && step.functionList.length\\\">\\n                  <!-- <br> -->\\n                  <nb-list cdkDropList class=\\\"example-list\\\"\\n                    (cdkDropListDropped)=\\\"dropFunction($event,step.step_position)\\\">\\n                    <nb-list-item *ngFor=\\\"let func of step.functionList\\\" cdkDragLockAxis=\\\"y\\\" cdkDrag>\\n                      <div>\\n                        {{func.func_name}}\\n                        <i class=\\\"ft-trash font-medium-1\\\" style=\\\"color:red;float: right;\\\"\\n                          (click)=\\\"onDeleteFunction(func)\\\">\\n                        </i>\\n                        <i class=\\\"ft-edit-2 font-medium-1\\\" style=\\\"color:#4ca6ff;float: right;margin-right: 1.5%;\\\"\\n                          (click)=\\\"onEditFunction(func)\\\">\\n                        </i>\\n                        <div *ngIf=\\\"func.func_value==='temp'\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-3\\\">\\n                              <label><b>S V (Set Value)(C) :</b> {{func.tempFunction.set_value}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                              <label><b>Rate of Rise (C/minute) :</b> {{func.tempFunction.rate_of_rise}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                              <label><b>Hold Time :</b> {{func.tempFunction.hold_time}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                              <label><b>Pressure (Above 80 C) :</b> {{func.tempFunction.pressure}}</label>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div *ngIf=\\\"func.func_value==='pump'\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-10\\\">\\n                              <label><b>Pump Speed (%) : </b>{{func.pumpMotorFunction.pump_speed}}</label>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div *ngIf=\\\"func.func_value==='dosing'\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                              <label><b>Fill Side Tank :</b> {{func.dosingFunction.fill_type}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                              <label><b>Fill Side Tank (%) :</b> {{func.dosingFunction.dosing_percentage}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\" *ngIf=\\\"func.dosingFunction.have_dose\\\">\\n                              <label><b>Dose at Temp (C) :</b> {{func.dosingFunction.dose_at_temp}}</label>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                              <label><b>Dose Type :</b> {{func.dosingFunction.dose_type}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                              <label><b>Dose While Heating :</b> {{func.dosingFunction.dose_while_heating}}</label>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"row\\\"\\n                            *ngIf=\\\"func.dosingFunction.dose_type != undefined && func.dosingFunction.dose_type === 'chemical'\\\">\\n                            <div class=\\\"col-md-6 table table-responsive\\\">\\n                              <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\"\\n                                [rowData]=\\\"func.dosingFunction.dosing_chemical\\\" [columnDefs]=\\\"chemicalcolumnDefs\\\"\\n                                [pagination]=\\\"true\\\" [paginationPageSize]='10'\\n                                *ngIf=\\\"func.dosingFunction.dosing_chemical.length\\\">\\n                              </ag-grid-angular>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div *ngIf=\\\"func.func_value==='operator'\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                              <label><b>Operator Code :</b> {{func.operatorFunction.operator_code}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                              <label><b>Operator Message :</b> {{func.operatorFunction.operator_message}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                              <label><b>Start At Temp :</b> {{func.operatorFunction.start_at_temp}}</label>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div *ngIf=\\\"func.func_value==='water'\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type === 'water'\\\">\\n                              <label><b>Water Type :</b> {{func.waterDrainFunction.water_type}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type === 'water'\\\">\\n                              <label><b>Fabric Ratio :</b> {{func.waterDrainFunction.fabric_ratio}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type === 'water'\\\">\\n                              <label><b>Jet Level :</b> {{func.waterDrainFunction.jet_level}}</label>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type !== 'water'\\\">\\n                              <label><b>Drain Type :</b> {{func.waterDrainFunction.drain_type}}</label>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </nb-list-item>\\n                  </nb-list>\\n                  <i *ngIf=\\\"step.functionList.length>1\\\" class=\\\"fa fa-plus-circle\\\"\\n                    style=\\\"color:green;font-size:25px;cursor: pointer;margin-left: 91%;margin-top: 1%;\\\"\\n                    (click)=\\\"onAddFunction()\\\"></i>\\n                </div>\\n              </nb-accordion-item-body>\\n            </nb-accordion-item>\\n            <!-- <hr> -->\\n          </nb-accordion>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"box-footer\\\">\\n        <button [disabled]=\\\"vform.invalid\\\" nbButton (click)=\\\"onCustomFormSubmit(vform)\\\">Save</button>\\n        &nbsp;\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/process/view-process-list' id=\\\"Cancel\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \":host /deep/ nb-theme-default nb-list-item {\\n  padding: 0rem !important;\\n  border-bottom: 0px !important; }\\n\\n:host /deep/ nb-theme-default nb-accordion nb-accordion-item-header {\\n  padding: 0.75rem !important; }\\n\\n.item-header {\\n  background-color: lightgray;\\n  border-radius: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9keW5hbWljLXByb2Nlc3MvQzpcXFVzZXJzXFxERUxMXFxEb3dubG9hZHNcXG5neC13aXJlZnJhbWUtNGNhNDNjZDhhYjI1NDc4YTA0OTE3NzBjMTIwYTdhNTVmYmI4MmM1ZS9zcmNcXGFwcFxccGFnZXNcXHByb2Nlc3NcXGR5bmFtaWMtcHJvY2Vzc1xcZHluYW1pYy1wcm9jZXNzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFDO0VBQ0kseUJBQXdCO0VBQ3hCLDhCQUE2QixFQUNoQzs7QUFFRDtFQUNJLDRCQUEyQixFQUM5Qjs7QUFFRDtFQUNJLDRCQUEyQjtFQUMzQixtQkFBa0IsRUFDckIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcm9jZXNzL2R5bmFtaWMtcHJvY2Vzcy9keW5hbWljLXByb2Nlc3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgOmhvc3QgL2RlZXAvIG5iLXRoZW1lLWRlZmF1bHQgbmItbGlzdC1pdGVtIHtcbiAgICAgcGFkZGluZzogMHJlbSAhaW1wb3J0YW50O1xuICAgICBib3JkZXItYm90dG9tOiAwcHggIWltcG9ydGFudDtcbiB9XG5cbiA6aG9zdCAvZGVlcC8gbmItdGhlbWUtZGVmYXVsdCBuYi1hY2NvcmRpb24gbmItYWNjb3JkaW9uLWl0ZW0taGVhZGVyIHtcbiAgICAgcGFkZGluZzogMC43NXJlbSAhaW1wb3J0YW50O1xuIH1cblxuIC5pdGVtLWhlYWRlciB7XG4gICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuIH0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AddStepComponent } from '../add-step/add-step.component';\nimport { Step, FunctionObj, DynamicProcessReq, DynamicProcessRecordReq, TempFunctionObj, DosingFunctionObj, PumpMotorFunctionObj, WaterDrainFunctionObj, OperatorMessageObj } from '../../../@theme/model/process-planning-class';\nimport { AddEditFunctionComponent } from '../add-edit-function/add-edit-function.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from '../../../@theme/model/user-class';\nimport { AuthService } from '../../../@theme/services/auth.service';\nimport { ProcessService } from '../../../@theme/services/process.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'ngx-dynamic-process',\n  templateUrl: './dynamic-process.component.html',\n  styleUrls: ['./dynamic-process.component.scss']\n})\nexport class DynamicProcessComponent implements OnInit, OnDestroy {\n\n  processModal = new DynamicProcessReq();\n  stepList: Step[] = [];\n  addFunctionFlag = false;\n  currentSelectedFunction = '';\n  selectedStep: any;\n  id: any;\n  currentUserId: any;\n  currentUserHeadid: any;\n  currentUser$: Subscription;\n  currentUser: User;\n  currentUserGroupUserIds: any;\n  dynamicProcessRecordReq: DynamicProcessRecordReq[] = [];\n  subBtnName = '';\n  topHeader = '';\n  chemicalcolumnDefs = [\n    { headerName: 'Item Name', field: 'item_name', width: 100 },\n    { headerName: 'Concentration', field: 'concentration', width: 130 },\n    { headerName: 'LR/F_WT', field: 'lr_or_fabric_wt', width: 100 },\n    { headerName: 'Supplier Name', field: 'supplier_name', width: 130 },\n  ];\n  rowChemicalData: any;\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService, private router: Router,\n    private authService: AuthService, private processService: ProcessService, private route: ActivatedRoute) {\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\n      if (ele != null) {\n        this.currentUser = ele.user;\n        this.currentUserId = ele.user.user_id;\n        this.currentUserHeadid = ele.user.user_head_id;\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.currentUser$.unsubscribe();\n  }\n  ngOnInit() {\n    this.onPageLoad();\n  }\n  onPageLoad() {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id != null) {\n      if (this.id) {\n        this.subBtnName = 'Update';\n        this.topHeader = 'Edit Process';\n\n      }\n      this.processService.getDynamicProcessById(this.id).subscribe(\n        data => {\n          if (!data[0].error) {\n            this.processModal = data[0].data.process[0];\n            this.dynamicProcessRecordReq = data[0].data.process_record;\n            if (this.dynamicProcessRecordReq.length) {\n              let stepArray = [];\n              this.stepList = [];\n              this.dynamicProcessRecordReq.forEach((ele, index) => {\n                if (stepArray.findIndex(v => v == ele.step_name) == -1) {\n                  stepArray.push(ele.step_name);\n                  let obj = new Step();\n                  obj.step_name = ele.step_name;\n                  obj.step_position = ele.step_position;\n                  obj.control_id = ele.control_id;\n                  obj.functionList = [];\n                  this.stepList.push(obj)\n                }\n              })\n              this.dynamicProcessRecordReq.forEach((ele, index) => {\n                let stepIndex = this.stepList.findIndex(v => v.step_name == ele.step_name);\n                if (stepIndex > -1) {\n                  let wfuncObj = new WaterDrainFunctionObj();\n                  let tfuncObj = new TempFunctionObj();\n                  let dfuncObj = new DosingFunctionObj();\n                  let pfuncObj = new PumpMotorFunctionObj();\n                  let ofuncObj = new OperatorMessageObj();\n                  if (ele.func_value === 'temp') {\n                    tfuncObj.pressure = ele.pressure;\n                    tfuncObj.set_value = ele.set_value;\n                    tfuncObj.hold_time = ele.hold_time;\n                    tfuncObj.rate_of_rise = ele.rate_of_rise;\n                  } else if (ele.func_value === 'dosing') {\n                    dfuncObj.have_dose = ele.have_dose;\n                    dfuncObj.dose_at_temp = ele.dose_at_temp;\n                    dfuncObj.dosing_percentage = ele.dosing_percentage;\n                    dfuncObj.fill_type = ele.fill_type;\n                    dfuncObj.dose_type = ele.dose_type;\n                    dfuncObj.dose_while_heating = ele.dose_while_heating;\n                    dfuncObj.dosing_chemical = ele.dosing_chemical;\n                    this.rowChemicalData = [...dfuncObj.dosing_chemical];\n                  } else if (ele.func_value === 'pump') {\n                    pfuncObj.pump_speed = ele.pump_speed;\n                  } else if (ele.func_value === 'water') {\n                    wfuncObj.water_type = ele.water_type;\n                    wfuncObj.drain_type = ele.drain_type;\n                    wfuncObj.fabric_ratio = ele.fabric_ratio;\n                    wfuncObj.jet_level = ele.jet_level;\n                  } else if (ele.func_value === 'operator') {\n                    ofuncObj.operator_message = ele.operator_message;\n                    ofuncObj.operator_code = ele.operator_code;\n                    ofuncObj.start_at_temp = ele.start_at_temp;\n                  }\n                  let funcObj = new FunctionObj();\n                  funcObj.func_value = ele.func_value;\n                  funcObj.func_position = ele.func_position;\n                  funcObj.func_name = ele.func_name;\n                  funcObj.dosingFunction = dfuncObj;\n                  funcObj.waterDrainFunction = wfuncObj;\n                  funcObj.tempFunction = tfuncObj;\n                  funcObj.pumpMotorFunction = pfuncObj;\n                  funcObj.operatorFunction = ofuncObj;\n                  this.stepList[stepIndex].functionList.push(funcObj);\n                }\n              })\n            }\n          } else {\n            this.toasterService.error(data.message);\n          }\n        }, error => {\n          this.toasterService.error('Server Error');\n        });\n    } else {\n      this.subBtnName = 'Save';\n      this.topHeader = 'Add Process';\n    }\n  }\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.stepList, event.previousIndex, event.currentIndex);\n    this.stepList.forEach((ele, index) => {\n      ele.step_position = index + 1;\n    })\n  }\n  dropFunction(event: CdkDragDrop<string[]>, step_position) {\n    moveItemInArray(this.stepList[step_position - 1].functionList, event.previousIndex, event.currentIndex);\n    this.stepList[step_position - 1].functionList.forEach((ele, index) => {\n      ele.func_position = index + 1;\n    })\n  }\n  onEditStep(step) {\n    const modalRef = this._modalService.open(AddStepComponent);\n    modalRef.componentInstance.position = step.step_position;\n    modalRef.componentInstance.stepList = this.stepList;\n    modalRef.componentInstance.editStep = true;\n    modalRef.result\n      .then((result) => {\n        if (result) {\n          this.stepList[step.step_position - 1].step_name = result.name;\n        }\n      });\n  }\n  onEditFunction(func) {\n    const modalRef = this._modalService.open(AddEditFunctionComponent);\n    let functionList = this.stepList[this.selectedStep - 1].functionList;\n    modalRef.componentInstance.position = func.func_position;\n    modalRef.componentInstance.functionList = functionList;\n    modalRef.componentInstance.editFunction = true;\n    modalRef.result\n      .then((result) => {\n        if (result) {\n          functionList[func.func_position - 1] = result;\n        }\n      });\n  }\n  onDeleteStep(step) {\n    let i = this.stepList.findIndex(v => v.step_position == step.step_position);\n    this.stepList.splice(i, 1);\n    // this.rowData = [...this.colourStockRecord]\n  }\n  onDeleteFunction(func) {\n    let functionList = this.stepList[this.selectedStep - 1].functionList;\n    let i = functionList.findIndex(v => v.func_position == func.func_position);\n    functionList.splice(i, 1);\n  }\n  onFunctionSelect(value) {\n    this.currentSelectedFunction = value;\n    this.addFunctionFlag = false;\n  }\n  onAddFunction(step?) {\n    if (step) {\n      this.selectedStep = step.step_position;\n    }\n    const modalRef = this._modalService.open(AddEditFunctionComponent);\n    let functionList = this.stepList[this.selectedStep - 1].functionList;\n    modalRef.componentInstance.position = functionList.length + 1;\n    modalRef.componentInstance.functionList = functionList;\n    modalRef.componentInstance.editFunction = false;\n    modalRef.result\n      .then((result) => {\n        if (result) {\n          let func = new FunctionObj();\n          func = result;\n          if (!functionList.length || result.func_position == functionList.length + 1) {\n            functionList.push(func);\n          } else {\n            functionList.splice(result.func_position - 1, 0, func);\n          }\n        }\n      });\n  }\n  onAddStep() {\n    const modalRef = this._modalService.open(AddStepComponent);\n    modalRef.componentInstance.position = this.stepList.length + 1;\n    modalRef.componentInstance.stepList = this.stepList;\n    modalRef.componentInstance.editStep = false;\n    modalRef.result\n      .then((result) => {\n        if (result) {\n          let step = new Step();\n          step.step_name = result.name;\n          step.step_position = result.position;\n          step.functionList = [];\n          if (!this.stepList.length || result.position == this.stepList.length + 1) {\n            this.stepList.push(step);\n          } else {\n            this.stepList.splice(result.position - 1, 0, step);\n          }\n        }\n      });\n  }\n  onStepClick(step) {\n    this.selectedStep = step.step_position;\n  }\n  onCustomFormSubmit(form: NgForm) {\n    this.dynamicProcessRecordReq = [];\n    if (this.stepList.length) {\n      this.stepList.forEach(step => {\n        if (step.functionList.length) {\n          step.functionList.forEach(func => {\n            let record = new DynamicProcessRecordReq();\n            record.control_id = step.control_id;\n            record.step_name = step.step_name;\n            record.step_position = step.step_position;\n            record.func_name = func.func_name;\n            record.func_value = func.func_value;\n            record.func_position = func.func_position;\n            record.water_type = func.waterDrainFunction ? func.waterDrainFunction.water_type : '';\n            record.fabric_ratio = func.waterDrainFunction ? func.waterDrainFunction.fabric_ratio : '';\n            record.jet_level = func.waterDrainFunction ? func.waterDrainFunction.jet_level : '';\n            record.drain_type = func.waterDrainFunction ? func.waterDrainFunction.drain_type : '';\n            record.set_value = func.tempFunction ? func.tempFunction.set_value : '';\n            record.rate_of_rise = func.tempFunction ? func.tempFunction.rate_of_rise : '';\n            record.hold_time = func.tempFunction ? func.tempFunction.hold_time : '';\n            record.pressure = func.tempFunction ? func.tempFunction.pressure : '';\n            record.pump_speed = func.pumpMotorFunction ? func.pumpMotorFunction.pump_speed : \"\";\n            record.fill_type = func.dosingFunction ? func.dosingFunction.fill_type : '';\n            record.dosing_percentage = func.dosingFunction ? func.dosingFunction.dosing_percentage : '';\n            record.have_dose = func.dosingFunction ? func.dosingFunction.have_dose : '';\n            record.dose_at_temp = func.dosingFunction ? func.dosingFunction.dose_at_temp : '';\n            record.dose_type = func.dosingFunction ? func.dosingFunction.dose_type : '';\n            record.dose_while_heating = func.dosingFunction ? func.dosingFunction.dose_while_heating : false;\n            record.operator_code = func.operatorFunction ? func.operatorFunction.operator_code : '';\n            record.operator_message = func.operatorFunction ? func.operatorFunction.operator_message : '';\n            record.start_at_temp = func.operatorFunction ? func.operatorFunction.start_at_temp : '';\n            record.dosing_chemical = func.dosingFunction ? func.dosingFunction.dosing_chemical : [];\n            this.dynamicProcessRecordReq.push(record)\n          })\n        }\n      });\n    }\n    this.processModal.process_req_record = [];\n    this.processModal.process_req_record = this.dynamicProcessRecordReq;\n    // for update\n    if (this.id) {\n      this.processModal.updated_by = this.currentUserId;\n      this.processService.updateDynamicProcess(this.processModal).subscribe(data => {\n        console.log(data)\n        if (!data[0].error) {\n          this.toasterService.success(data[0].message);\n          form.resetForm();\n          this.router.navigate(['/pages/process/view-process-list']);\n        } else {\n          this.toasterService.error(data[0].message);\n        }\n      }, error => {\n        this.toasterService.error('Server Error');\n      });\n    } else {\n      this.processModal.created_by = this.currentUserId;\n      this.processModal.user_head_id = this.currentUserHeadid;\n      console.log(this.processModal)\n      this.processService.addDynamicProcess(this.processModal).subscribe(data => {\n        data = data[0]\n        if (!data.error) {\n          this.toasterService.success(data.message);\n          form.resetForm();\n          this.router.navigate(['/pages/process/view-process-list']);\n        } else {\n          this.toasterService.error(data.message);\n        }\n      }, error => {\n        this.toasterService.error('Server Error');\n      });\n    }\n  }\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProcessComponent } from './process.component';\nimport { ViewProcessComponent } from './view-process/view-process.component';\nimport { AddEditProcessComponent } from './add-edit-process/add-edit-process.component';\nimport { DynamicProcessComponent } from './dynamic-process/dynamic-process.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProcessComponent,\n    children: [\n      {\n        path: 'view-process-list',\n        component: ViewProcessComponent\n      },\n      {\n        path: 'add-process',\n        component: AddEditProcessComponent,\n      },\n      {\n        path: 'add-dynamic-process',\n        component: DynamicProcessComponent,\n      },\n      {\n        path: 'edit-dynamic-process/:id',\n        component: DynamicProcessComponent,\n      },\n      {\n        path: 'edit-process/:id',\n        component: AddEditProcessComponent,\n      },\n      {\n        path: '',\n        redirectTo: 'view-process-list',\n        pathMatch: 'full',\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class ProcessRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3MvcHJvY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-process',\n  templateUrl: './process.component.html',\n  styleUrls: ['./process.component.scss']\n})\nexport class ProcessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewProcessComponent, CustomRendererProcessComponent } from './view-process/view-process.component';\nimport { ProcessComponent } from './process.component';\nimport { AddEditProcessComponent, CustomRendererScouringRecordComponent, CustomRendererColdWashRecordComponent, CustomRendererDyingRecordComponent, CustomRendererRCRecordComponent } from './add-edit-process/add-edit-process.component';\nimport { FormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { ProcessRoutingModule } from './process-routing.module';\nimport { DynamicProcessComponent } from './dynamic-process/dynamic-process.component';\nimport { AddStepComponent } from './add-step/add-step.component';\nimport { AddEditFunctionComponent, CustomRendererChemicalRecordComponent } from './add-edit-function/add-edit-function.component';\n\n@NgModule({\n  declarations: [\n    ProcessComponent,\n    AddEditProcessComponent,\n    ViewProcessComponent,\n    CustomRendererProcessComponent,\n    // CustomRendererScouringRecordComponent,\n    // CustomRendererColdWashRecordComponent,\n    // CustomRendererDyingRecordComponent,\n    // CustomRendererRCRecordComponent,\n    DynamicProcessComponent,\n    AddStepComponent,\n    AddEditFunctionComponent,\n    CustomRendererChemicalRecordComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AgGridModule,\n    NgbModule,\n    Ng2SmartTableModule,\n    NgxDatatableModule,\n    NgSelectModule,\n    ThemeModule,\n    ProcessRoutingModule\n  ],\n  entryComponents: [\n    AddStepComponent,\n    CustomRendererProcessComponent,\n    // CustomRendererScouringRecordComponent,\n    // CustomRendererColdWashRecordComponent,\n    // CustomRendererDyingRecordComponent,\n    // CustomRendererRCRecordComponent,\n    AddEditFunctionComponent,\n    CustomRendererChemicalRecordComponent\n  ]\n})\nexport class ProcessModule { }\n","module.exports = \"<nb-card>\\n  <nb-card-header>Process\\n    <button style=\\\"float: right;margin-left: 10px\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onAddProcess()\\\">\\n      Add Process\\n    </button>\\n    <button style=\\\"float: right;\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onExport()\\\">Export</button>\\n  </nb-card-header>\\n  <nb-card-body>\\n    <div *ngIf=\\\"viewGroupDataPermission && !viewAllDataPermission\\\">\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getProcessData($event)\\\">\\n        <nb-radio [value]=\\\"1\\\">\\n          View Own\\n        </nb-radio>\\n        <nb-radio [value]=\\\"2\\\">\\n          View Group\\n        </nb-radio>\\n      </nb-radio-group>\\n    </div>\\n    <div *ngIf=\\\"viewGroupDataPermission && viewAllDataPermission\\\">\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getProcessData($event)\\\">\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"1\\\">\\n          View Own\\n        </nb-radio>\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"2\\\">\\n          View Group\\n        </nb-radio>\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"3\\\">\\n          View All\\n        </nb-radio>\\n      </nb-radio-group>\\n    </div>\\n    <ag-grid-angular style=\\\"width: 100%; height:500px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\n      [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='100' (gridReady)=\\\"onGridReady($event)\\\">\\n    </ag-grid-angular>\\n  </nb-card-body>\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3Mvdmlldy1wcm9jZXNzL3ZpZXctcHJvY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ViewReqObj } from '../../../@theme/model/user-class';\nimport { Quality } from '../../../@theme/model/quality-class';\nimport { Party } from '../../../@theme/model/party-class';\nimport { ProcessService } from '../../../@theme/services/process.service';\nimport { PermissionService } from '../../../@theme/services/permission.service';\nimport { QualityService } from '../../../@theme/services/quality.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Papa } from 'ngx-papaparse';\nimport { PartyService } from '../../../@theme/services/party.service';\nimport { AuthService } from '../../../@theme/services/auth.service';\nimport { ColDef } from 'ag-grid-community';\nimport * as XLSX from 'xlsx';\nimport { AgRendererComponent } from 'ag-grid-angular';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\nimport { DynamicProcessReq } from '../../../@theme/model/process-planning-class';\n\n@Component({\n  selector: 'ngx-view-process',\n  templateUrl: './view-process.component.html',\n  styleUrls: ['./view-process.component.scss']\n})\nexport class ViewProcessComponent implements OnInit {\n\n  // processList: Process[] = [];\n  processList: DynamicProcessReq[] = [];\n  rowData;\n  gridApi;\n  gridColumnApi;\n  addProcessPermission = 1;\n  columnDefs = [\n    { headerName: 'Actions', field: 'entry_id', sortable: false, width: 120 },\n    { headerName: 'Process Name', field: 'process_name', sortable: true, filter: true },\n    { headerName: 'Process Time(Minutes)', field: 'time', sortable: true, filter: true },\n    { headerName: 'Created By', field: 'created_by', sortable: true, filter: true },\n    { headerName: 'Updated By', field: 'updated_by', sortable: true, filter: true },\n  ];\n  columnExportDefs = [\n    'process_name', 'no_dying_bath', 'dc_multiplying_fac', 'created_by', 'updated_by'];\n  currentUserId: any;\n  currentUser$: Subscription;\n  currentUserPermission = [];\n  currentUser;\n  viewAllDataPermission: any = false;\n  viewOwnDataPermission: any = false;\n  viewGroupDataPermission = false;\n  radioSelected: any = 1;\n  currentUserGroupUserIds: any;\n  processReqObj = new ViewReqObj();\n  qualityViewReqObj = new ViewReqObj();\n  qualityList: Quality[] = [];\n  partyNameList: Party[] = [];\n  viewPartyReqOb = new ViewReqObj();\n\n  constructor(private processService: ProcessService, private router: Router, private tosterService: ToastrService\n    , private permissionService: PermissionService, private papa: Papa, private authService: AuthService,\n    private qualityService: QualityService, private partyService: PartyService) {\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\n      if (ele != null) {\n        this.currentUser = ele.user;\n        this.currentUserId = ele.user.user_id;\n        this.currentUserPermission = ele.user_permission;\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\n      }\n    });\n    this.setColumns();\n  }\n\n\n  ngOnInit() {\n    if (this.currentUserPermission.length) {\n      this.currentUserPermission.forEach(ele => {\n        if (ele.form_name === 'Process') {\n          this.addProcessPermission = 1;\n          this.viewAllDataPermission = ele.can_view_all;\n          this.viewGroupDataPermission = ele.can_view_group;\n          this.viewOwnDataPermission = ele.can_view;\n\n          this.processReqObj.current_user_id = this.currentUserId;\n          this.processReqObj.user_head_id = this.currentUser.user_head_id;\n          this.processReqObj.group_user_ids = this.currentUserGroupUserIds;\n        }\n      })\n    }\n    this.getQualityData();\n    this.getPartyList();\n    this.getProcessData();\n  }\n  ngOnDestroy() {\n    this.currentUser$.unsubscribe();\n  }\n  getPartyList() {\n    this.partyNameList = [];\n    this.viewPartyReqOb.view_group = true;\n    this.viewPartyReqOb.current_user_id = this.currentUserId;\n    this.viewPartyReqOb.user_head_id = this.currentUser.user_head_id;\n    this.viewPartyReqOb.group_user_ids = this.currentUserGroupUserIds;\n    this.partyService.getPartyList(this.viewPartyReqOb).subscribe(\n      data => {\n        if (!data[0].error) {\n          this.partyNameList = data[0].data;\n        } else {\n          this.tosterService.error(data[0].message);\n        }\n      }, error => {\n        this.tosterService.error(error);\n      });\n  }\n  getQualityData() {\n    this.qualityViewReqObj.current_user_id = this.currentUserId;\n    this.qualityViewReqObj.user_head_id = this.currentUser.user_head_id;\n    this.qualityViewReqObj.group_user_ids = this.currentUserGroupUserIds;\n    this.qualityViewReqObj.view_group = true;\n    this.qualityService.getAllQualityData(this.qualityViewReqObj).subscribe(data => {\n      if (!data[0].error) {\n        this.qualityList = data[0].data;\n      }\n    })\n  }\n  getProcessData(value?) {\n    this.processReqObj.view_all = false;\n    this.processReqObj.view_group = false;\n    this.processReqObj.view_own = false;\n\n    if (value)\n      this.radioSelected = value;\n\n    //check which radio button is selected\n    if (this.radioSelected == 1)\n      this.processReqObj.view_own = true;\n    else if (this.radioSelected == 2)\n      this.processReqObj.view_group = true;\n    else if (this.radioSelected == 3)\n      this.processReqObj.view_all = true;\n\n    this.processService.getAllDynamicProcesss(this.processReqObj).subscribe(data => {\n      if (!data[0].error) {\n        this.processList = data[0].data;\n        this.rowData = this.processList;\n      } else {\n        this.tosterService.error(data[0].message);\n      }\n    });\n  }\n  setColumns() {\n    this.columnDefs.forEach((column: ColDef) => {\n      if (column.field === 'entry_id') {\n        column.cellRendererFramework = CustomRendererProcessComponent;\n        column.cellRendererParams = {\n          inRouterLink: '/pages/process/edit-dynamic-process/',\n          inViewLink: '/pages/process/view-process/',\n          action: this\n        };\n      }\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    // this.getUserList(this.currentUserId);\n  }\n  onAddProcess() {\n    if (this.addProcessPermission) {\n      this.router.navigate(['/pages/process/add-dynamic-process']);\n    } else {\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to add process. If you want to add process ask admin for permission.');\n      if (res) {\n\n      } else {\n\n      }\n    }\n  }\n  onExport() {\n    var params = {\n      columnKeys: this.columnExportDefs\n    };\n    var data = this.gridApi.getDataAsCsv(params);\n    this.papa.parse(data, {\n      complete: (result) => {\n        this.exportExcel(result.data);\n      }\n    });\n  }\n\n  exportExcel(data) {\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    XLSX.writeFile(workbook, 'my_file.xls', { bookType: 'xls', type: 'buffer' });\n  }\n}\n\n@Component({\n  template: `\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editProcess()\"></i>\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteProcess()\"></i>`,\n  styleUrls: ['./view-process.component.scss']\n})\n\nexport class CustomRendererProcessComponent implements AgRendererComponent, OnDestroy {\n  params: any;\n  editProcessPermission = 1;\n  deleteProcessPermission = 1;\n  currentUserId: any;\n  currentUser$: Subscription;\n  currentUserPermission = [];\n  currentUser;\n\n  constructor(private router: Router, private _modalService: NgbModal, private processService: ProcessService,\n    private toasterService: ToastrService, private permissionService: PermissionService, private authService: AuthService) {\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\n      if (ele != null) {\n        this.currentUser = ele.user;\n        this.currentUserPermission = ele.user_permission;\n      }\n    });\n  }\n  agInit(params: any): void {\n    this.params = params;\n    this.currentUserPermission.forEach(ele => {\n      if (ele.form_name === 'Process') {\n        if (this.params.action.radioSelected == 1) {\n          this.editProcessPermission = ele.can_edit;\n          this.deleteProcessPermission = ele.can_delete;\n        } else if (this.params.action.radioSelected == 2) {\n          this.editProcessPermission = ele.can_edit_group;\n          this.deleteProcessPermission = ele.can_delete_group;\n        } else if (this.params.action.radioSelected == 3) {\n          this.editProcessPermission = ele.can_edit_all;\n          this.deleteProcessPermission = ele.can_delete_all;\n        }\n      }\n    })\n  }\n  ngOnDestroy() {\n    this.currentUser$.unsubscribe();\n  }\n  refresh(): boolean {\n    return false;\n  }\n\n  viewProcess() {\n  }\n\n  editProcess() {\n    if (this.editProcessPermission) {\n      this.router.navigate([this.params.inRouterLink + this.params.value]);\n    } else {\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to edit process. If you want to edit process ask admin for permission.');\n      if (res) {\n\n      } else {\n\n      }\n    }\n  }\n  onDeleteProcess() {\n    if (this.deleteProcessPermission) {\n      const modalRef = this._modalService.open(ConfirmDialogComponent);\n      modalRef.componentInstance.titleFrom = 'Delete Process ';\n      modalRef.componentInstance.message = 'Are you sure you want to delete this process?';\n      modalRef.result\n        .then((result) => {\n          if (result) {\n            const id = this.params.value;\n            this.processService.deleteDynamicProcessById(id).subscribe(data => {\n              if (!data[0].error) {\n                this.params.action.getProcessData();\n                this.toasterService.success(data[0].message);\n              } else {\n                this.toasterService.error(data[0].message);\n              }\n            });\n          }\n        });\n    } else {\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to delete process. If you want to delete process ask admin for permission.');\n      if (res) {\n\n      } else {\n\n      }\n    }\n  }\n}\n\n\n"],"sourceRoot":""}